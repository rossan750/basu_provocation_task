name: Add App Installers to Release

on:
  push:
    tags:
      - '*'

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
    # Set up js package
    - uses: actions/checkout@v1
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Set package version and name
      uses: brown-ccv/gh-actions/get-package-info@main
      id: package_info

    # install, test, build package
    - name: npm install
      run: npm install
    - name: npm build - linux mac
      if: startsWith(matrix.os, 'mac') || startsWith(matrix.os, 'ubuntu')
      run: npm run build
    - name: npm build - windows clinic
      if: startsWith(matrix.os, 'windows')
      run: npm run build:win:clinic
    - name: npm test
      run: npm test
      env:
        CI: true

    # Build electron app package installers
    - name: package electron - windows
      if: startsWith(matrix.os, 'windows')
      run: npm run package:windows
    - name: Rename windows installer - clinic
      if: startsWith(matrix.os, 'windows')
      shell: bash
      run: mv dist/installers/${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}-setup.exe dist/installers/${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}-setup-clinic.exe
    - name: package electron - linux
      if: startsWith(matrix.os, 'ubuntu')
      run: npm run package:linux
    - name: package electron - mac
      if: startsWith(matrix.os, 'mac')
      run: npm run package:mac
    - name: npm rebuild - mac
      if: startsWith(matrix.os, 'mac')
      run: npm rebuild
    - name: Mac installer
      if: startsWith(matrix.os, 'mac')
      run: npm run installer:mac

    # Upload installers to github release
    - name: Upload app to release - windows
      if: startsWith(matrix.os, 'windows')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/installers/${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}-setup-clinic.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload app to release - linux
      if: startsWith(matrix.os, 'ubuntu')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/installers/${{ steps.package_info.outputs.package_name }}_${{ steps.package_info.outputs.package_version }}_x64.deb
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload app to release - mac
      if: startsWith(matrix.os, 'mac')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/installers/${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Build At Home Windows Release
    - name: npm build - win home
      if: startsWith(matrix.os, 'windows')
      run: npm run build:win:home
      env:
        CI: true
        REACT_APP_AT_HOME: true
    - name: npm test - win home
      if: startsWith(matrix.os, 'windows')
      run: npm test
      env:
        CI: true
        REACT_APP_AT_HOME: true
    - name: package electron - windows home
      if: startsWith(matrix.os, 'windows')
      run: npm run package:windows
    - name: Rename windows installer - home
      if: startsWith(matrix.os, 'windows')
      shell: bash
      run: mv dist/installers/${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}-setup.exe dist/installers/${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}-setup-home.exe
    - name: Upload app to release - windows home
      if: startsWith(matrix.os, 'windows')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/installers/${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}-setup-home.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Build At Home Video Windows Release
    - name: npm build - win home
      run: npm run build:win:home:video
      env:
        CI: true
        REACT_APP_AT_HOME: true
        REACT_APP_VIDEO: true
    - name: npm test - win home
      run: npm test
    - name: package electron - windows home
      if: startsWith(matrix.os, 'windows')
      run: npm run package:windows
    - name: Rename windows installer - home
      if: startsWith(matrix.os, 'windows')
      shell: bash
      run: mv dist/installers/${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}-setup.exe dist/installers/${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}-setup-home-video.exe
    - name: Upload app to release - windows home
      if: startsWith(matrix.os, 'windows')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/installers/${{ steps.package_info.outputs.package_name }}-${{ steps.package_info.outputs.package_version }}-setup-home-video.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                
    # Build PsiTurk - linux only
    - name: Set up Python 3.7
      if: startsWith(matrix.os, 'ubuntu')
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install PsiTurk
      if: startsWith(matrix.os, 'ubuntu')
      run: pip install psiturk
    - name: PsiTurk Build
      if: startsWith(matrix.os, 'ubuntu')
      run: npm run build:win:home
      env:
        CI: true
        REACT_APP_AT_HOME: true
    - name: Create Psiturk Build
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        cd psiturkit
        ./psiturk-it -p ${{ steps.package_info.outputs.package_name }}-psiturk
        cd ..
        tar -cvzf ${{ steps.package_info.outputs.package_name }}-psiturk.tar.gz psiturkit/${{ steps.package_info.outputs.package_name }}-psiturk
    - name: Upload PsiTurk build to release
      if: startsWith(matrix.os, 'ubuntu')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.package_info.outputs.package_name }}-psiturk.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
