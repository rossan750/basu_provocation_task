{"version":3,"sources":["config/main.js","lib/markup/photodiode.js","lib/markup/stimuli.js","config/trigger.js","trials/camera.js","assets/images/provocation-images/neutral sync nonrecursive //.(png|jpe?g|svg)$","assets/images/provocation-images/neutral/1_happy.jpg","assets/images/provocation-images/neutral/2_happy.jpg","assets/images/provocation-images/neutral/3_happy.jpg","assets/images/provocation-images/neutral/4_happy.jpg","assets/images/provocation-images/provoking sync nonrecursive //.(png|jpe?g|svg)$","assets/images/provocation-images/provoking/4_sad.jpeg","assets/images/provocation-images/provoking/5_sad.jpeg","assets/images/provocation-images/provoking/6_sad.jpeg","assets/images/provocation-images/provoking/7_unknown.jpeg","assets/images/practice-images/neutral sync nonrecursive //.(png|jpe?g|svg)$","assets/images/practice-images/neutral/istockphoto-888845986-612x612.jpg","assets/audio sync nonrecursive //.(m4a|mp3)$","assets/audio/Guided Breathing.m4a","assets/audio/PlaceHolderBreathingForButler.m4a","assets/audio/breathing_exercise.m4a","lib/utils.js","firebase.js","lib/markup/fixation.js","trials/fixation.js","trials/showImage.js","lib/taskUtils.js","trials/rateImage.js","timelines/taskTrial.js","timelines/taskBlock.js","trials/experimentStart.js","trials/holdUpMarker.js","trials/instructions.js","trials/adjustVolume.js","trials/countdown.js","trials/blockEnd.js","trials/experimentEnd.js","trials/requestLock.js","trials/releaseLock.js","trials/startCode.js","lib/taskSetUpUtils.js","timelines/main.js","components/JsPsychExperiment.jsx","components/Login.jsx","App.jsx","index.js"],"names":["__webpack_require__","d","__webpack_exports__","envConfig","imageSettings","numRequiredImages","ratingSettings","defaultBlockSettings","lang","practiceBlockSettings","breathingAudio","audioCodes","taskName","jspsych_react__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","n","_trigger__WEBPACK_IMPORTED_MODULE_2__","USE_MTURK","jsPsych","turk","turkInfo","outsideTurk","USE_VIDEO","process","REACT_APP_VIDEO","USE_FIREBASE","REACT_APP_FIREBASE","USE_ELECTRON","window","require","_unused","HIDE_FRAME_ELECTRON","REACT_APP_HIDE_FRAME_ELECTRON","USE_EEG","USE_PHOTODIODE","width","height","importAll","r","keys","map","frequency","eventCodes","open_provoc_task","type","neutralImages","provokingImages","practiceImages","audio","_","filter","o","includes","console","log","min","max","canvasSize","circleRadius","cursorRadius","mlang","merge","num_repeats","images","neutral","provoking","repeats_per_condition","is_practice","USE_VOLUME","photodiodeGhostBox","pdSpotEncode","_config_main__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_1__","jquery__WEBPACK_IMPORTED_MODULE_1___default","ipcRenderer","electron","class_","concat","taskCode","numBlinks","repeat_pulse_for","ms","i","callback","$","css","background-color","setTimeout","pulse_for","send","baseStimulus","element","prompt","arguments","length","undefined","module","exports","fixation","evidence","show_ratings","rate","start_break","test_connect","camera","document","title","markup","instructions","stimulus","choices","continue","button","response_ends_trial","on_load","participantId","data","get","values","participant_id","getElementById","handleEvents","stream","recorder","srcObject","recordedChunks","MediaRecorder","mimeType","addEventListener","e","size","push","blob","media","reader","FileReader","fileName","Date","now","onload","readyState","buffer","Buffer","result","readAsArrayBuffer","saveBlob","Blob","navigator","mediaDevices","getUserMedia","video","then","desktopCapturer","getSources","types","_ref","Object","_home_runner_work_basu_provocation_task_basu_provocation_task_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_runner_work_basu_provocation_task_basu_provocation_task_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","sources","_iterator","_step","source","wrap","_context","prev","next","_home_runner_work_basu_provocation_task_basu_provocation_task_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__","s","done","value","name","mandatory","chromeMediaSource","chromeMediaSourceId","id","catch","error","err","f","stop","_x","apply","this","on_finish","cameraCapture","start","screenCapture","./1_happy.jpg","./2_happy.jpg","./3_happy.jpg","./4_happy.jpg","webpackContext","req","webpackContextResolve","Error","code","resolve","p","./4_sad.jpeg","./5_sad.jpeg","./6_sad.jpeg","./7_unknown.jpeg","./istockphoto-888845986-612x612.jpg","./Guided Breathing.m4a","./PlaceHolderBreathingForButler.m4a","./breathing_exercise.m4a","sleep","Promise","jitter50","base","offset","Math","floor","random","jitter","deepCopy","obj","JSON","parse","stringify","shuffleArray","array","temporaryValue","randomIndex","currentIndex","getTurkUniqueId","workerId","assignmentId","config","apiKey","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","firebase","initializeApp","db","firestore","location","hostname","useEmulator","getObjectURLs","asyncToGenerator","regenerator_default","_callee2","participantID","studyID","folderType","folderURL","storage","ref","objects","URLs","_context2","listAll","sent","items","_ref2","item","getDownloadURL","abrupt","_x4","all","_x2","_x3","initParticipant","studyId","startDate","collection","doc","set","start_time","app_version","appVersion","app_platform","platform","results","addToFirebase","study_id","start_date","update","FieldValue","arrayUnion","_firebase$firestore","TimeStamp","GeoPoint","fixationHTML","color","duration","jittered","green","hideCursor","trial_duration","NO_KEYS","showImage","image","addClass","isColliding","x1","y1","r1","x2","y2","dx","dy","sqrt","getCircle","x","y","circles","circle_r","c","CANVAS_SIZE","CIRCLE_RADIUS","CURSOR_RADIUS","canvasHTML","rateImage","async","func","showCode","rateCode","container","querySelector","innerHTML","animation","canvas","ctx","getContext","clicked","pointerLockElement","mozPointerLockElement","path","rt","addToPath","elapsed","center","slice","PI","range","val","theta","sin","cos","getCircles","canvasDraw","clearRect","font","textBaseline","textAlign","fillStyle","fillText","drawPrompt","radius","cursor_radius","hovered","forEach","circle","beginPath","arc","fill","toString","drawNumbers","drawFixation","cursorSize","moveTo","lineTo","lineWidth","strokeStyle","stroke","drawCursor","requestPointerLock","mozRequestPointerLock","lockChangeAlert","requestAnimationFrame","lockError","onclick","handleMoveListener","movementX","movementY","newdx","sign","newdy","updated","handleClickListener","end_rt","removeEventListener","click","taskTrial","condition","timeline","taskBlock","blockSettings","b","startingOptions","pop","toConsumableArray","generateStartingOpts","experimentStart","task","holdUpMarker","focus","screenOne","welcome","p1","p2","screenTwo","screenThree","screenFour","rate_practice","screenFive","no_talking","screenSix","instruction_end","instructions1","show_clickable_nav","pages","breathing","instructions2","adjustVolume","adjust_volume","buildCountdown","text","time","blockEnd","curBlock","totalBlocks","block","end_p1","end_p2","end_p3","break_p1","break_p2","break_p3","trial_ends_after_audio","experimentEnd","end","requestLock","el","lock_request","once","releaseLock","exitPointerLock","mozExitPointerLock","lock_release","startCode","setting_up","context","AudioContext","createOscillator","g","createGain","connect","setValueAtTime","destination","currentTime","beep","app","fs","getFirebaseImages","newImages","checkNumImages","numNeutral","numProvoking","errorMessage","alert","getLocalImages","category","localImagePath","join","getPath","imagePath","readdirSync","getImages","_newImages","remote","t0","warn","taskSetUp","newBlocks","countdown","message","tl","primaryTimeline","mturkTimeline","_x5","JsPsychExperiment","dataUpdateFunction","dataFinishFunction","_useState","useState","_useState2","slicedToArray","setTimeline","useEffect","newTimeline","react_default","createElement","className","experiment","settings","preload_audio","on_data_update","Login","onLogin","envParticipantId","envStudyId","validationFunction","setParticipant","_useState3","_useState4","setStudy","_useState5","_useState6","setError","role","Form","onSubmit","preventDefault","loggedIn","Group","controlId","Label","Control","autoFocus","onChange","target","Button","style","disabled","App","setLogin","setRenderer","psiturk","setPsiturk","_useState7","_useState8","setParticipantID","_useState9","_useState10","setStudyID","_useState11","_useState12","setEnvParticipantId","_useState13","_useState14","setEnvStudyId","_useState15","_useState16","currentMethod","setMethod","toISOString","query","URLSearchParams","search","defaultValidation","defaultFunction","setLoggedIn","useCallback","newLoggedIn","newStudyID","newParticipantID","addProperties","timestamp","task_version","version","renderer","credentials","sendSync","lodash","noConflict","turkId","PsiTurk","Fragment","components_JsPsychExperiment","desktop","mturk","recordTrialData","default","saveData","completeHIT","completePsiturk","localSave","components_Login","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.feb48a0e.chunk.js","sourcesContent":["// config/main.js\n// This is the main configuration file where universal and default settings should be placed.\n// These settins can then be imported anywhere in the app as they are exported at the botom of the file.\n\nimport { jsPsych } from \"jspsych-react\";\nimport _ from \"lodash\";\nimport { eventCodes } from \"./trigger\";\nimport requireContext from \"require-context.macro\";\n\n// is this mechanical turk?\nconst USE_MTURK = !jsPsych.turk.turkInfo().outsideTurk;\nconst USE_VIDEO = process.env.REACT_APP_VIDEO === \"true\";\nconst USE_FIREBASE = process.env.REACT_APP_FIREBASE === \"true\";\nlet USE_ELECTRON = true;\n\ntry {\n  window.require(\"electron\");\n} catch {\n  USE_ELECTRON = false;\n}\n\n// whether or not to ask the participant to adjust the volume\nconst USE_VOLUME = process.env.REACT_APP_VOLUME === \"true\";\n// whether or not to set a frame in the Electron window, see electron.js\nconst HIDE_FRAME_ELECTRON = process.env.REACT_APP_HIDE_FRAME_ELECTRON === \"true\" && USE_ELECTRON;\n// whether or not the EEG/event marker is available\nconst USE_EEG = process.env.REACT_APP_USE_EEG === \"true\" && USE_ELECTRON;\n// whether or not the photodiode is in use\nconst USE_PHOTODIODE = process.env.REACT_APP_USE_PHOTODIODE === \"true\" && USE_ELECTRON;\n\nconst BREATHING_AUDIO = process.env.REACT_APP_BREATHING_AUDIO || \"breathing_exercise\"\n\nconst imageSettings = {\n  width: 600,\n  height: 600,\n};\n\n// how many of each type of image are required if loading images from disk\nconst numRequiredImages = 10;\n\n// import images\nconst importAll = (r) => {\n  return r.keys().map(r);\n};\n\n// audio codes\nconst audioCodes = {\n  frequency: 100 * (eventCodes.open_provoc_task - 9),\n  type: \"sine\",\n};\n\n// UPDATE THIS PATH TO CHANGE IMAGE FOLDER\nconst neutralImages = importAll(\n  requireContext(\n    \"../assets/images/provocation-images/neutral\",\n    false,\n    /\\.(png|jpe?g|svg)$/\n  )\n);\nconst provokingImages = importAll(\n  requireContext(\n    \"../assets/images/provocation-images/provoking\",\n    false,\n    /\\.(png|jpe?g|svg)$/\n  )\n);\n\nconst practiceImages = importAll(\n  requireContext(\n    \"../assets/images/practice-images/neutral\",\n    false,\n    /\\.(png|jpe?g|svg)$/\n  )\n);\n\nconst audio = importAll(\n  requireContext(\"../assets/audio\", false, /\\.(m4a|mp3)$/)\n);\n\nconst breathingAudio = _.filter(audio, (o) =>\n  o.includes(BREATHING_AUDIO)\n)[0];\n\nconsole.log(breathingAudio);\n\nconst ratingSettings = {\n  min: 0,\n  max: 8,\n  canvasSize: 640, // canvas is a square\n  circleRadius: 28,\n  cursorRadius: 7.5,\n};\n\n// get language file\nconst lang = require(\"../language/en_us.json\");\nif (USE_MTURK) {\n  // if this is mturk, merge in the mturk specific language\n  const mlang = require(\"../language/en_us.mturk.json\");\n  _.merge(lang, mlang);\n}\n\nconst defaultBlockSettings = {\n  num_repeats: 2, // how many blocks to have\n  images: {\n    neutral: neutralImages,\n    provoking: provokingImages,\n  },\n  repeats_per_condition: 3, // number of times every condition is repeated\n  is_practice: false,\n};\n\nconst practiceBlockSettings = {\n  images: {\n    neutral: practiceImages,\n    provoking: [],\n  },\n  repeats_per_condition: 1, // number of times every condition is repeated\n  is_practice: true,\n};\n\nconst taskName = \"Provocation\";\n\nconst envConfig = {\n  USE_MTURK,\n  USE_VIDEO,\n  USE_ELECTRON,\n  USE_FIREBASE,\n  USE_EEG,\n  HIDE_FRAME_ELECTRON,\n  USE_PHOTODIODE,\n  USE_VOLUME\n}\n\nexport {\n  envConfig,\n  imageSettings,\n  numRequiredImages,\n  ratingSettings,\n  defaultBlockSettings,\n  lang,\n  eventCodes,\n  practiceBlockSettings,\n  importAll,\n  breathingAudio,\n  audioCodes,\n  taskName,\n};\n","import { eventCodes, envConfig  } from  '../../config/main'\nimport $ from 'jquery'\n\n// conditionally load electron and psiturk based on envConfig.MTURK config variable\nlet ipcRenderer = false;\nif (envConfig.USE_ELECTRON) {\n  const electron = window.require('electron');\n  ipcRenderer  = electron.ipcRenderer;\n}\n\n// Relies on styling in App.css, generate PD spot\nconst photodiodeGhostBox = () => {\n\tconst class_ = envConfig.USE_PHOTODIODE ? 'visible' : 'invisible'\n\n  return `<div class=\"photodiode-box ${class_}\" id=\"photodiode-box\">\n\t\t\t\t\t\t\t\t\t<span id=\"photodiode-spot\" class=\"photodiode-spot\"></span>\n  \t\t\t\t\t\t\t\t</div>`\n}\n\nconst pdSpotEncode = (taskCode) => {\n  function pulse_for(ms, callback) {\n      $('.photodiode-spot').css({\"background-color\": \"white\"})\n      setTimeout(() => {\n        $('.photodiode-spot').css({\"background-color\": \"black\"})\n        callback()\n      }, ms)\n    }\n\n    function repeat_pulse_for(ms, i) {\n      if (i > 0) {\n        pulse_for(ms, () => {\n          setTimeout(() => {\n            repeat_pulse_for(ms, i-1)\n          }, ms)\n        })\n      }\n    }\n\n\tif (envConfig.USE_PHOTODIODE) {\n\t\tconst blinkTime = 40\n\t\tlet numBlinks = taskCode\n    if (taskCode < eventCodes.open_provoc_task) numBlinks = 1;\n\t\trepeat_pulse_for(blinkTime, numBlinks)\n    if (ipcRenderer) {\n      ipcRenderer.send(\"trigger\", taskCode)\n      setTimeout(function(){ipcRenderer.send('trigger', 0)}, 5)\n    }\n\t}\n}\n\nexport {\n\tphotodiodeGhostBox,\n\tpdSpotEncode\n}\n","const baseStimulus = (element, prompt=false) => {\n  const class_ = (prompt) ? 'main-prompt': 'task-container'\n  return `<div class=${class_}>${element}</div>`\n}\n\n\nexport {\n  baseStimulus\n}\n","// Event trigger settings - used in both the react app (renderer) and the electron app (main)\n\n// NOTE: THESE CODES MUST MATCH public/config/trigger.js - MAKE SURE THE CODES MATCH\n\nconst eventCodes = {\n\topen_provoc_task: 13,\n\tfixation: 1,\n\tevidence: 5,\n\tshow_ratings: 7,\n\trate: 2,\n\tstart_break: 8,\n\ttest_connect: 32\n}\n\n// this is module.exports isntead of just exports as it is also imported into the electron app\nmodule.exports = {\n\teventCodes\n}\n","import { lang, taskName, envConfig } from \"../config/main\";\nimport { photodiodeGhostBox } from \"../lib/markup/photodiode\";\nimport { baseStimulus } from \"../lib/markup/stimuli\";\nimport { jsPsych } from \"jspsych-react\";\n\nlet ipcRenderer = false;\nif (envConfig.USE_ELECTRON) {\n  const electron = window.require(\"electron\");\n  ipcRenderer = electron.ipcRenderer;\n}\n\nfunction saveBlob(blob, media, participantId) {\n  let reader = new FileReader();\n  let fileName = `pid_${participantId}_${media}_${Date.now()}.webm`;\n  reader.onload = function () {\n    if (reader.readyState === 2) {\n      const buffer = new Buffer(reader.result);\n      ipcRenderer.send(\"save_video\", fileName, buffer);\n    }\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\nconst camera = () => {\n  document.title = taskName;\n  let markup = `\n  <div class=\"d-flex flex-column align-items-center\">\n  <p>${lang.instructions.camera}</p>\n  <video id=\"camera\" width=\"640\" height=\"480\" autoplay></video>\n  </div>\n  `;\n  let stimulus = baseStimulus(markup, false) + photodiodeGhostBox();\n\n  return {\n    type: \"html_button_response\",\n    stimulus: stimulus,\n    choices: [lang.prompt.continue.button],\n    response_ends_trial: true,\n    on_load: () => {\n      // Grab elements, create settings, etc.\n      // Elements for taking the snapshot\n      const participantId = jsPsych.data.get().values()[0].participant_id;\n\n      let camera = document.getElementById(\"camera\");\n\n      const handleEvents = function (stream, recorder) {\n        console.log(stream);\n        if (recorder === \"cameraCapture\") {\n          camera.srcObject = stream;\n        }\n\n        const options = { mimeType: \"video/webm\" };\n        const recordedChunks = [];\n        window[recorder] = new MediaRecorder(stream, options);\n\n        window[recorder].addEventListener(\"dataavailable\", function (e) {\n          if (e.data.size > 0) {\n            recordedChunks.push(e.data);\n          }\n        });\n\n        window[recorder].addEventListener(\"stop\", function () {\n          const blob = new Blob(recordedChunks);\n          saveBlob(blob, recorder, participantId);\n        });\n      };\n\n      navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then((stream) => handleEvents(stream, \"cameraCapture\"));\n\n      const { desktopCapturer } = window.require(\"electron\");\n\n      desktopCapturer\n        .getSources({ types: [\"window\"] })\n        .then(async (sources) => {\n          for (const source of sources) {\n            if (source.name === taskName) {\n              navigator.mediaDevices\n                .getUserMedia({\n                  video: {\n                    mandatory: {\n                      chromeMediaSource: \"desktop\",\n                      chromeMediaSourceId: source.id,\n                    },\n                  },\n                })\n                .then((stream) => {\n                  handleEvents(stream, \"screenCapture\");\n                })\n                .catch((error) => console.log(error));\n            }\n          }\n        });\n    },\n    on_finish: () => {\n      if (envConfig.USE_ELECTRON) {\n        window.cameraCapture.start();\n        window.screenCapture.start();\n      }\n    },\n  };\n};\n\nexport default camera;","var map = {\n\t\"./1_happy.jpg\": 51,\n\t\"./2_happy.jpg\": 52,\n\t\"./3_happy.jpg\": 53,\n\t\"./4_happy.jpg\": 54\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 50;","module.exports = __webpack_public_path__ + \"static/media/1_happy.18aba42e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2_happy.9545f071.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3_happy.c893ae7f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4_happy.d5ab89eb.jpg\";","var map = {\n\t\"./4_sad.jpeg\": 56,\n\t\"./5_sad.jpeg\": 57,\n\t\"./6_sad.jpeg\": 58,\n\t\"./7_unknown.jpeg\": 59\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 55;","module.exports = __webpack_public_path__ + \"static/media/4_sad.104fb27c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/5_sad.ef6dac84.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/6_sad.bb879b1e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/7_unknown.c348d28c.jpeg\";","var map = {\n\t\"./istockphoto-888845986-612x612.jpg\": 61\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 60;","module.exports = __webpack_public_path__ + \"static/media/istockphoto-888845986-612x612.23164b56.jpg\";","var map = {\n\t\"./Guided Breathing.m4a\": 63,\n\t\"./PlaceHolderBreathingForButler.m4a\": 64,\n\t\"./breathing_exercise.m4a\": 65\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 62;","module.exports = __webpack_public_path__ + \"static/media/Guided Breathing.ad20697d.m4a\";","module.exports = __webpack_public_path__ + \"static/media/PlaceHolderBreathingForButler.baf2b4f7.m4a\";","module.exports = __webpack_public_path__ + \"static/media/breathing_exercise.b4b71d9b.m4a\";","import { jsPsych } from \"jspsych-react\";\n\n// add a random number between 0 and offset to the base number\nconst jitter = (base, offset) =>\n  base + Math.floor(Math.random() * Math.floor(offset));\n\nconst sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n// add a random number between 0 and 50 to the base number\nconst jitter50 = (base) => jitter(base, 50);\n\n// flip a coin\nconst randomTrue = () => Math.random() > 0.5;\n\n// deeply copy an object\nconst deepCopy = (obj) => JSON.parse(JSON.stringify(obj));\n\n// format a number as a dollar amount\nconst formatDollars = (amount) => \"$\" + parseFloat(amount).toFixed(2);\n\n// shuffle the items in an array randomly\nconst shuffleArray = (array) => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n  // While there remain elements to shuffle\n  while (0 !== currentIndex) {\n    // Pick a remaining element\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    // And swap it with the current element\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\n\n// create a pre-trial wait period\nconst generateWaitSet = (trial, waitTime) => {\n  let waitTrial = Object.assign({}, trial);\n  waitTrial.trial_duration = waitTime;\n  waitTrial.response_ends_trial = false;\n  waitTrial.prompt = \"-\";\n\n  return [waitTrial, trial];\n};\n\nconst keypressResponse = (info) => {\n  const data = {\n    key_press: info.key,\n  };\n\n  jsPsych.finishTrial(data);\n};\n\nconst startKeypressListener = () => {\n  return jsPsych.pluginAPI.getKeyboardResponse({\n    callback_function: keypressResponse,\n    valid_responses: jsPsych.ALL_KEYS,\n    persist: false,\n  });\n};\n\nconst getTurkUniqueId = () => {\n  const turkInfo = jsPsych.turk.turkInfo();\n  return `${turkInfo.workerId}:${turkInfo.assignmentId}`;\n};\n\nconst beep = (audioCodes) => {\n  const context = new AudioContext();\n  const o = context.createOscillator();\n  const g = context.createGain();\n  o.type = audioCodes.type;\n  o.connect(g);\n  o.frequency.setValueAtTime(audioCodes.frequency, 0);\n  g.connect(context.destination);\n  o.start();\n  o.stop(context.currentTime + 0.4);\n};\n\nexport {\n  jitter,\n  sleep,\n  jitter50,\n  randomTrue,\n  deepCopy,\n  formatDollars,\n  shuffleArray,\n  generateWaitSet,\n  startKeypressListener,\n  getTurkUniqueId,\n  beep,\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst COLLECTION_NAME = \"participant_responses\";\nconst config = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId || \"no-firebase\",\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n};\n// Initialize firebase app\nfirebase.initializeApp(config);\n// Get the firestore instance, and use the emulator if running locally\nlet db = firebase.firestore();\nif (window.location.hostname === \"localhost\") {\n  db.useEmulator(\"localhost\", 8080);\n}\n\n/**\n * Gets the download URLs for all objects in a Firebase storage folder. These can be\n * referenced in a src tag to display the objects, if they are images.\n * @param {string} participantID The participant ID.\n * @param {string} studyID The study ID.\n * @param {string} folderType The type of folder, either \"neutral\" or \"provoking\".\n * @returns An array of promises, each containing a download URL for an object.\n */\nconst getObjectURLs = async (participantID, studyID, folderType) => {\n  const folderURL = `${studyID}/${participantID}/${folderType}`;\n  const storage = firebase.storage();\n  const ref = storage.ref(folderURL);\n  const objects = await ref.listAll();\n  let URLs = objects.items.map(async (item) => await item.getDownloadURL());\n  return await Promise.all(URLs);\n};\n\n// Add participant data and trial data to db\nconst initParticipant = (participantId, studyId, startDate) => {\n  // return promise with value true if participant and study id match, false otherwise\n  return db\n    .collection(COLLECTION_NAME)\n    .doc(studyId)\n    .collection(\"participants\")\n    .doc(participantId)\n    .collection(\"data\")\n    .doc(startDate)\n    .set({\n      start_time: startDate,\n      app_version: window.navigator.appVersion,\n      app_platform: window.navigator.platform,\n      results: [],\n    })\n    .then(() => {\n      return true;\n    })\n    .catch(() => {\n      return false;\n    });\n};\n\n// add individual trials to db\nconst addToFirebase = (data) => {\n  const participantID = data.participant_id;\n  const studyID = data.study_id;\n  const startDate = data.start_date;\n  db.collection(COLLECTION_NAME)\n    .doc(studyID)\n    .collection(\"participants\")\n    .doc(participantID)\n    .collection(\"data\")\n    .doc(startDate)\n    .update(\"results\", firebase.firestore.FieldValue.arrayUnion(data))\n    .then(() => {\n      return true;\n    })\n    .catch((error) => {\n      console.error(\"Error adding to Firebase:\", error);\n      return false;\n    });\n};\n\n// Export types that exists in Firestore\n// This is not always necessary, but it's used in other examples\nconst { TimeStamp, GeoPoint } = firebase.firestore;\nexport {\n  db,\n  TimeStamp,\n  GeoPoint,\n  COLLECTION_NAME,\n  initParticipant,\n  addToFirebase,\n};\n\nexport { getObjectURLs };\nexport default firebase;\n","export const fixationHTML = (color) => {\n  if (color) {\n    return '<div class=\"task-container\"><div id=\"fixation-dot\" class=\"color-green\"> </div></div>'\n  } else {\n    return '<div class=\"task-container\"><div id=\"fixation-dot\" class=\"color-white\"> </div></div>'\n  }\n}\n","import { eventCodes } from '../config/main'\nimport { jitter50 } from '../lib/utils'\nimport { pdSpotEncode, photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { fixationHTML } from '../lib/markup/fixation'\nimport { jsPsych } from 'jspsych-react'\nimport $ from 'jquery'\n\nconst fixation = (duration, jittered=true, green=false, hideCursor=false) => {\n  let stimulus = fixationHTML(green) + photodiodeGhostBox()\n\n  const code = eventCodes.fixation;\n\n  const trial_duration = jittered ? jitter50(duration) : duration\n\n  return {\n    type: 'html_keyboard_response',\n    choices: jsPsych.NO_KEYS,\n    stimulus: stimulus,\n    response_ends_trial: false,\n    trial_duration: trial_duration,\n    on_load: () => {\n      pdSpotEncode(code)\n      if (hideCursor) $('html').css('cursor', 'none')\n    },\n    on_finish: (data) => {\n      data.code = code\n      if (hideCursor) $('html').css('cursor', 'auto')\n    }\n  }\n}\n\nexport default fixation\n","import { eventCodes, imageSettings } from '../config/main'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\nimport $ from 'jquery'\nimport { jitter50 } from '../lib/utils'\n\n\nconst showImage = (image, duration) => {\n  const code = eventCodes.evidence\n\n  return {\n    type: 'image_keyboard_response',\n    stimulus: image,\n    prompt: photodiodeGhostBox(),\n    response_ends_trial: false,\n    trial_duration: jitter50(duration),\n    on_load: () => {\n      $('#jspsych-image-keyboard-response-stimulus').addClass('image')\n      $('#jspsych-image-keyboard-response-stimulus').height(imageSettings.height)\n      $('#jspsych-image-keyboard-response-stimulus').width(imageSettings.width)\n      $('html').css('cursor', 'none')\n      pdSpotEncode(code)\n    },\n    on_finish: (data) => {\n      data.code = code\n      $('html').css('cursor', 'auto')\n    }\n  }\n}\n\nexport default showImage\n","// utilities specific to this app/task\nimport _ from \"lodash\";\nimport { deepCopy, randomTrue, shuffleArray } from \"./utils\";\n\n// initialize starting conditions for each trial within a block\n// each repetition set is independently randomized then concatenated\n// no more than 3 images from a set can repeat in a row\nconst generateStartingOpts = (b) => {\n  let startingOptions = [];\n\n  for (let i = 0; i < b.repeats_per_condition; i++) {\n    let neutralImages = shuffleArray(deepCopy(b.images.neutral));\n    let provokingImages = shuffleArray(deepCopy(b.images.provoking));\n\n    while (neutralImages.length > 0 && provokingImages.length > 0) {\n      if (neutralImages.length - provokingImages.length >= 3) {\n        startingOptions.push(neutralImages.pop());\n      } else if (provokingImages.length - neutralImages.length >= 3) {\n        startingOptions.push(provokingImages.pop());\n      } else if (randomTrue()) {\n        startingOptions.push(neutralImages.pop());\n      } else {\n        startingOptions.push(provokingImages.pop());\n      }\n    }\n\n    startingOptions.push(...neutralImages);\n    startingOptions.push(...provokingImages);\n  }\n\n  return startingOptions;\n};\n\nconst getCircles = (start, stop, size) => {\n  const center = size / 2;\n  const r = center * 0.85;\n  const n = stop - start + 1;\n\n  const slice = Math.PI / (n - 1);\n\n  return _.range(start, stop + 1).map((val) => {\n    let theta = slice * val - Math.PI / 2;\n    let x = r * Math.sin(theta) + center;\n    let y = r * Math.cos(theta) + center;\n    return { n: val, x: x, y: y };\n  });\n};\n\nconst isColliding = (x1, y1, r1, x2, y2) => {\n  let dx = x1 - x2;\n  let dy = y1 - y2;\n  let distance = Math.sqrt(dx * dx + dy * dy);\n\n  return distance < r1;\n};\n\nconst getCircle = (x, y, r, circles, circle_r) => {\n  for (let i = 0; i < circles.length; i++) {\n    let c = circles[i];\n    if (isColliding(c.x, c.y, circle_r, x, y, r)) {\n      return c;\n    }\n  }\n\n  return null;\n};\n\nconst drawNumbers = (ctx, circles, radius, x, y, cursor_radius) => {\n  ctx.font = radius * 0.8 + \"px arial\";\n  ctx.textBaseline = \"middle\";\n  ctx.textAlign = \"center\";\n\n  let hovered = getCircle(x, y, cursor_radius, circles, radius);\n\n  circles.forEach((circle) => {\n    // draw circle\n    if (circle === hovered) {\n      ctx.fillStyle = \"#778899\"; // medium grey\n    } else {\n      ctx.fillStyle = \"#D3D3D3\"; // light grey\n    }\n    ctx.beginPath();\n    ctx.arc(circle.x, circle.y, radius, 0, 2 * Math.PI, true);\n    ctx.fill();\n\n    // draw text\n    ctx.fillStyle = \"#000000\"; // black\n    ctx.fillText(circle.n.toString(), circle.x, circle.y + 3.5);\n  });\n};\n\nconst drawPrompt = (ctx, rt, size, clicked) => {\n  // only draw if it's been 10 seconds\n  if (rt < 10000 && clicked) return;\n\n  ctx.font = 20 + \"px arial\";\n  ctx.textBaseline = \"middle\";\n  ctx.textAlign = \"center\";\n\n  // draw text\n  ctx.fillStyle = \"#ffffff\"; // white\n  if (!clicked) {\n    ctx.fillText(\"Click the dot\", size / 2, size * 0.25);\n  } else {\n    ctx.fillText(\"Please select a rating\", size / 2, size * 0.25);\n  }\n};\n\nconst drawFixation = (ctx, size) => {\n  ctx.fillStyle = \"#ffffff\";\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, 7.5, 0, 2 * Math.PI, true);\n  ctx.fill();\n};\n\nconst drawCursor = (ctx, x, y, cursorSize) => {\n  ctx.beginPath();\n  ctx.moveTo(x, y - cursorSize);\n  ctx.lineTo(x, y + cursorSize);\n\n  ctx.moveTo(x - cursorSize, y);\n  ctx.lineTo(x + cursorSize, y);\n\n  // Line color\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = \"#a6a6a6\";\n\n  ctx.stroke();\n};\n\nexport {\n  generateStartingOpts,\n  getCircles,\n  getCircle,\n  drawNumbers,\n  drawPrompt,\n  drawFixation,\n  drawCursor,\n};\n","import { eventCodes, ratingSettings } from '../config/main'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\nimport { getCircles, getCircle, drawNumbers, drawPrompt, drawFixation, drawCursor } from '../lib/taskUtils'\nimport $ from 'jquery'\n\n// make sure cursor radius is such that it can only touch one circle at a time\nconst CANVAS_SIZE = ratingSettings.canvasSize\nconst CIRCLE_RADIUS = ratingSettings.circleRadius\nconst CURSOR_RADIUS = ratingSettings.cursorRadius\n\nconst canvasHTML = `<canvas width=\"${CANVAS_SIZE}\" height=\"${CANVAS_SIZE}\" id=\"jspsych-canvas\">\n    Your browser does not support HTML5 canvas\n  </canvas>`\n\nconst rateImage = () => {\n    let stimulus = `<div class=\"task-container\">` + canvasHTML + photodiodeGhostBox() + `</div>`\n\n    return {\n      type: 'call_function',\n      async: true,\n      func: (done) => {\n        // send trigger events\n        const showCode = eventCodes.show_ratings\n        const rateCode = eventCodes.rate\n\n        const start = Date.now()\n\n        // add stimulus to the DOM\n        const container = document.querySelector('#jspsych-content')\n        container.innerHTML = stimulus\n\n        // set up canvas\n        let canvas = document.querySelector('#jspsych-canvas');\n        let ctx = canvas.getContext('2d');\n        let animation\n        let clicked = document.pointerLockElement === container ||\n            document.mozPointerLockElement === container; // require user engagement to lock\n\n        let w = $('#jspsych-canvas').width()\n        let x = w / 2\n        let dx = 0 // start at rest\n\n        let h = $('#jspsych-canvas').height()\n        let y = h / 2\n        let dy = 0 // start at rest\n\n        let path = []\n        const rt = () => Date.now() - start\n        const addToPath = () => path.push({x: x, y: y, elapsed: rt()})\n        addToPath()\n\n        let circles = getCircles(ratingSettings.min, ratingSettings.max, CANVAS_SIZE)\n\n        const canvasDraw = () => {\n          // transparent background\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n          drawPrompt(ctx, rt(), CANVAS_SIZE, clicked)\n\n          drawNumbers(ctx, circles, CIRCLE_RADIUS, x, y, CURSOR_RADIUS)\n\n          drawFixation(ctx, CANVAS_SIZE)\n\n          // draw the cursor\n          drawCursor(ctx, x, y, CURSOR_RADIUS)\n        }\n\n        // request control of the cursor from the dom\n        container.requestPointerLock = container.requestPointerLock ||\n                            container.mozRequestPointerLock;\n\n\n        const lockChangeAlert = (e) => {\n          if (document.pointerLockElement === container ||\n              document.mozPointerLockElement === container) {\n            clicked = true;\n            if (!animation) {\n              animation = requestAnimationFrame(() => {\n                animation = null;\n                canvasDraw();\n              });\n            }\n          }\n        }\n\n        const lockError = (e) => {\n          clicked = false;\n          if (!animation) {\n            animation = requestAnimationFrame(() => {\n              animation = null;\n              canvasDraw();\n            });\n          }\n        }\n\n        document.addEventListener('pointerlockerror', lockError, false);\n        document.addEventListener('pointerlockchange', lockChangeAlert, false);\n        document.addEventListener('mozpointerlockchange', lockChangeAlert, false);\n\n        canvas.onclick = () => !clicked && container.requestPointerLock();\n\n        const handleMoveListener = (e) => {\n          x += e.movementX;\n          y += e.movementY;\n\n          // if direction changes, add to path\n          let newdx = Math.sign(e.movementX)\n          let newdy = Math.sign(e.movementY)\n\n          let updated = false\n          if ( newdx !== dx && newdx !== 0 ) {\n            addToPath()\n            dx = newdx\n            updated = true\n          }\n\n          if ( newdy !== dy && newdy !== 0 ) {\n            if (!updated) addToPath()\n            dy = newdy\n          }\n\n          // keep circle in canvas\n          if (x > canvas.width - CURSOR_RADIUS) {\n            x = canvas.width - CURSOR_RADIUS;\n          }\n          if (y > canvas.height - CURSOR_RADIUS) {\n            y = canvas.height - CURSOR_RADIUS;\n          }\n          if (x < CURSOR_RADIUS) {\n            x = CURSOR_RADIUS;\n          }\n          if (y < CURSOR_RADIUS) {\n            y = CURSOR_RADIUS;\n          }\n\n          // re-draw with updates\n          if (!animation) {\n            animation = requestAnimationFrame(() => {\n              animation = null;\n              canvasDraw();\n            });\n          }\n        }\n\n        const handleClickListener = () => {\n          // find circle that was clicked (or null if none)\n          let circle = getCircle(x, y, CURSOR_RADIUS, circles, CIRCLE_RADIUS)\n\n          if (circle) { // rating complete\n            const end_rt = rt()\n            pdSpotEncode(rateCode)\n\n            // add final click spot to path\n            addToPath()\n\n            container.removeEventListener(\"mousemove\", handleMoveListener, false)\n            container.removeEventListener(\"click\", handleClickListener, false)\n\n            setTimeout(\n              () => {\n                document.removeEventListener('pointerlockerror', lockError, false);\n                document.removeEventListener('pointerlockchange', lockChangeAlert, false);\n                document.removeEventListener('mozpointerlockchange', lockChangeAlert, false);\n                done({circle: circle, click: {x: x, y: y}, code: [showCode, rateCode], rt: end_rt, path: path})\n              },\n              500)\n          }\n        }\n\n        // Bind event listener to document\n        container.addEventListener(\"mousemove\", handleMoveListener, false)\n        container.addEventListener(\"click\", handleClickListener, false)\n\n        // show ratings\n        canvasDraw();\n        pdSpotEncode(showCode)\n\n        // make sure canvas re-draws at 10 seconds to get prompt\n        setTimeout(canvasDraw, 10000)\n      }\n    }\n}\n\nexport default rateImage\n","// import trials\nimport fixation from '../trials/fixation'\nimport showImage from '../trials/showImage'\nimport rateImage from '../trials/rateImage'\n\nconst taskTrial = (condition) => {\n\n  // timeline\n  let timeline = [\n    // show condition\n    fixation(2000, true, false, true), // jittered, white, hidden cursor\n    fixation(200, false, true, true), // not jittered, green, hidden cursor\n    showImage(condition, 3000),\n\n    // end the trial\n    rateImage()\n  ]\n\n    return {\n  \t\ttype: 'html_keyboard_response',\n  \t\ttimeline: timeline\n  \t}\n}\n\nexport default taskTrial\n","import taskTrial from './taskTrial'\nimport { generateStartingOpts } from '../lib/taskUtils'\n\n\nconst taskBlock = (blockSettings) => {\n\n\tconst startingOpts = generateStartingOpts(blockSettings)\n\tlet timeline = startingOpts.map( (image) => taskTrial(image))\n\n\treturn {\n\t\ttype: 'html_keyboard_response',\n\t\ttimeline: timeline\n\t}\n}\n\nexport default taskBlock\n","import { lang } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst experimentStart = () => {\n  let stimulus = baseStimulus(`<div><h1>${lang.task.name}</h1></div>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_button_response',\n    stimulus: stimulus,\n    prompt: '',\n    choices: [lang.prompt.continue.button],\n  }\n}\n\nexport default experimentStart\n","import { lang } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst holdUpMarker = () => {\n  let stimulus = baseStimulus(`<div>\n    <h2 id='usb-alert'></h2>\n    <br><p>${lang.prompt.focus}</p>\n    </div>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_button_response',\n    stimulus: stimulus,\n    choices: [lang.prompt.continue.button]\n  }\n}\n\nexport default holdUpMarker\n","import { lang } from '../config/main'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\n\nconst screenOne = baseStimulus(`\n    <div class='instructions'>\n    <h1>${lang.instructions.welcome}</h1>\n    <p>${lang.instructions.p1}</p>\n    <p>${lang.instructions.p2}</p>\n    </div>\n    `, true)\n\nconst screenTwo = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.fixation}</p>\n    <div id=\"fixation-dot\" class=\"color-white\"></div>\n    </div>\n    `, true)\n\nconst screenThree = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.rate}</p>\n    </div>\n    `, true)\n\nconst screenFour = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.rate_practice}</p>\n    </div>\n    `, true)\n\nconst screenFive = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.no_talking}</p>\n    </div>\n    `, true)\n\nconst screenSix = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.instruction_end}</p>\n    </div>\n    `, true)\n\nconst breathing = baseStimulus(`\n  <div class='instructions'>\n  <p>${lang.instructions.breathing}</p>\n  </div>\n  `, true)\n\nconst instructions1 = {\n  type: 'instructions',\n  show_clickable_nav: true,\n  pages: [\n    screenOne,\n    breathing,\n    screenTwo,\n    screenThree,\n    screenFour,\n  ]\n}\n\nconst instructions2 = {\n  type: 'instructions',\n  show_clickable_nav: true,\n  pages: [\n    screenFive,\n    screenSix,\n  ]\n}\n\nexport {\n  instructions1,\n  instructions2\n}\n","import { lang } from '../config/main'\nimport { baseStimulus } from '../lib/markup/stimuli';\n\nconst adjustVolume = () => {\n    const stimulus = baseStimulus(`\n    <div class='instructions'>\n    <h1>${lang.instructions.adjust_volume}</h1>\n    </div>\n    `, true)\n    \n    return {\n        type: 'html_button_response',\n        stimulus: stimulus,\n        choices: [ lang.prompt.continue.button ],\n        response_ends_trial: true\n    }\n}\n\nexport default adjustVolume","import * as _ from 'lodash'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\n// build a countdown transition with the given text and number of seconds\nconst buildCountdown = (text, time) => {\n  const times = _.range(time, 0 , -1)\n  const timeline = times.map( (val) => {return({ prompt: `<h1>${val}</h1>` })})\n\n  return ({\n    type: 'html_keyboard_response',\n    stimulus: baseStimulus(`<h3>${text}</h3>`, true),\n    trial_duration: 1000,\n    response_ends_trial: false,\n    timeline:  timeline\n  })\n}\n\nexport default buildCountdown\n","import { lang, breathingAudio, eventCodes } from '../config/main'\nimport { baseStimulus } from '../lib/markup/stimuli'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\n\nconst blockEnd = (curBlock, totalBlocks) => {\n  const code = eventCodes.start_break;\n\n  let prompt = baseStimulus(`\n    <div class='instructions'>\n  <h1>${lang.block.end_p1}\n    ${curBlock}\n    ${lang.block.end_p2}\n    ${totalBlocks}\n    ${lang.block.end_p3}</h1>\n  <h2>${lang.block.break_p1}\n    ${curBlock + 1}\n    ${lang.block.break_p2}\n    ${totalBlocks}\n    ${lang.block.break_p3}</h2>\n  </div>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'audio_keyboard_response',\n    stimulus: breathingAudio,\n    prompt: prompt,\n    choices: [],\n    response_ends_trial: false,\n    trial_ends_after_audio: true,\n    on_load: () => {\n      pdSpotEncode(code)\n    },\n    on_finish: (data) => {\n      data.code = code\n    }\n  }\n}\n\nexport default blockEnd\n","import { lang, envConfig } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst experimentEnd = (duration) => {\n  let stimulus = baseStimulus(`<h1>${lang.task.end}</h1>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_keyboard_response',\n    stimulus: stimulus,\n    trial_duration: duration,\n    on_load: () => {\n      if (envConfig.USE_VIDEO) {\n        console.log('finished')\n        window.cameraCapture.stop()\n        window.screenCapture.stop()\n      }\n    }\n  }\n}\n\nexport default experimentEnd\n","import { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { fixationHTML } from '../lib/markup/fixation'\n\nconst requestLock = () => {\n    let stimulus = `<div class=\"task-container\"><h1>Click the dot</h1>` + fixationHTML(false) + photodiodeGhostBox() + `</div>`\n\n    return {\n      type: 'call_function',\n      async: true,\n      func: (done) => {\n        // add stimulus to the DOM\n        const el = document.querySelector('#jspsych-content')\n        el.innerHTML = stimulus\n\n        // request control of the cursor from the dom\n        el.requestPointerLock = el.requestPointerLock ||\n                            el.mozRequestPointerLock;\n\n        const clickHandler = () => {\n          el.requestPointerLock()\n          el.innerHTML = ''\n          setTimeout(\n            () => {\n              done({lock_request: true})\n            },\n            500)\n        };\n\n        el.addEventListener('click', clickHandler, {once: true})\n      }\n    }\n}\n\nexport default requestLock\n","const releaseLock = () => {\n    return {\n      type: 'call_function',\n      async: true,\n      func: (done) => {\n        document.exitPointerLock = document.exitPointerLock ||\n                           document.mozExitPointerLock;\n\n        document.exitPointerLock();\n\n        done({lock_release: true})\n      }\n    }\n}\n\nexport default releaseLock\n","import { eventCodes, lang, audioCodes } from '../config/main'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\nimport { beep } from '../lib/utils'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst startCode = () => {\n  let stimulus = baseStimulus(`<h1>${lang.prompt.setting_up}</h1>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_keyboard_response',\n    stimulus: stimulus,\n    trial_duration: 2000,\n    on_load: () => {\n      pdSpotEncode(eventCodes.open_provoc_task)\n      beep(audioCodes)\n    }\n  }\n}\n\nexport default startCode\n","import path from 'path'\nimport { getObjectURLs } from '../firebase'\nimport {\n  envConfig,\n  numRequiredImages\n} from '../config/main'\n\nlet app = false\nlet fs = false\nlet ipcRenderer = false\n\n/**\n * Sets the experiment images from the Firebase storage bucket.\n * The function updates this object's \"images\" field to contain the images from Firebase.\n */\nconst getFirebaseImages = async (participantID, studyID) => {\n  const newImages = {\n    neutral: [],\n    provoking: []\n  }\n  newImages.neutral = await getObjectURLs(participantID, studyID, 'neutral')\n  newImages.provoking = await getObjectURLs(participantID, studyID, 'provoking')\n  return newImages\n}\n\nconst checkNumImages = (newImages) => {\n  // check the number of loaded images matches what is expected\n  let numNeutral = newImages.neutral.length\n  let numProvoking = newImages.provoking.length\n  if (numNeutral !== numRequiredImages || numProvoking !== numRequiredImages) {\n    const errorMessage = `Number of images provided does not meet requirement.  Found ${numNeutral} neutral images and ${numProvoking} provoking images, the settings for this task requires ${numRequiredImages} of each type.`\n    if (envConfig.USE_ELECTRON) {\n      ipcRenderer.send('error', errorMessage)\n    } else {\n      alert(errorMessage)\n    }\n  }\n}\n\nconst getLocalImages = (participantID, category) => {\n  const localImagePath = path.join(\n    app.getPath('desktop'),\n    'provocation-images',\n    `${participantID}`\n  )\n\n  const imagePath = path.join(localImagePath, category)\n  const items = fs.readdirSync(imagePath)\n  return items.map(\n    (image) => `file://` + path.join(imagePath, image)\n  )\n}\n\nconst getImages = async (participantID, studyID) => {\n  if (envConfig.USE_ELECTRON) {\n    app = window.require('electron').remote.app\n    fs = window.require('fs')\n    const electron = window.require('electron')\n    ipcRenderer = electron.ipcRenderer\n    try {\n      const newImages = {};\n      newImages.neutral = getLocalImages(participantID, 'neutral')\n      newImages.provoking = getLocalImages(participantID, 'provoking')\n\n      checkNumImages(newImages)\n      return newImages\n    } catch (error) {\n      console.warn('Error loading local files - using default images')\n      ipcRenderer.send(\n        'error',\n        `Could not load images from local device. - ${error}`\n      )\n    }\n  } else if (envConfig.USE_FIREBASE) {\n    const newImages = await getFirebaseImages(participantID, studyID)\n    checkNumImages(newImages)\n    return newImages\n  } else {\n    return false\n  }\n}\n\nexport { getImages }\n","import taskBlock from \"./taskBlock\";\nimport experimentStart from \"../trials/experimentStart\";\nimport holdUpMarker from \"../trials/holdUpMarker\";\nimport { instructions1, instructions2 } from \"../trials/instructions\";\nimport adjustVolume from \"../trials/adjustVolume\";\nimport camera from \"../trials/camera\";\nimport buildCountdown from '../trials/countdown'\nimport blockEnd from '../trials/blockEnd'\nimport experimentEnd from '../trials/experimentEnd'\nimport requestLock from '../trials/requestLock'\nimport releaseLock from '../trials/releaseLock'\nimport startCode from '../trials/startCode'\nimport {\n  envConfig,\n  defaultBlockSettings,\n  practiceBlockSettings, lang,\n} from '../config/main'\nimport { getImages } from '../lib/taskSetUpUtils'\n\nconst taskSetUp = async (participantID, studyID, blockSettings) => {\n  const newImages = await getImages(participantID, studyID)\n\n  if (newImages) {\n    blockSettings.images.neutral = newImages.neutral\n    blockSettings.images.provoking = newImages.provoking\n  } else {\n    blockSettings.images = defaultBlockSettings.images\n  }\n\n  let newBlocks = []\n  for (let i = 1; i <= blockSettings.num_repeats; i++) {\n    newBlocks.push(\n      buildCountdown(lang.countdown.message, 3),\n      taskBlock(blockSettings)\n    )\n    if (i < blockSettings.num_repeats) {\n      newBlocks.push(\n        blockEnd(i, blockSettings.num_repeats)\n      )\n    }\n  }\n\n  return newBlocks\n}\n\nconst tl = async (participantID, studyID) => {\n  let timeline = [experimentStart()];\n\n  if (envConfig.USE_VOLUME) timeline.push(adjustVolume());\n\n  if (envConfig.USE_VIDEO) timeline.push(camera());\n\n  if (envConfig.USE_EEG) {\n    timeline.push(holdUpMarker());\n    timeline.push(startCode());\n  }\n\n  timeline.push(\n    instructions1,\n    requestLock(),\n    taskBlock(practiceBlockSettings),\n    releaseLock(),\n    instructions2\n  );\n\n  const newBlocks = await taskSetUp(participantID, studyID, defaultBlockSettings)\n\n  timeline.push(requestLock())\n  timeline.push(...newBlocks)\n  timeline.push(releaseLock())\n\n  timeline.push(experimentEnd(5000))\n\n  const primaryTimeline = timeline;\n\n  const mturkTimeline = [];\n\n  return envConfig.USE_MTURK ? mturkTimeline : primaryTimeline\n}\n\nexport { tl }\n","import React, { useState, useEffect } from \"react\"\nimport { Experiment } from \"jspsych-react\"\nimport { tl } from \"../timelines/main\"\nimport { breathingAudio } from \"../config/main\"\n\nfunction JsPsychExperiment ({ dataUpdateFunction, dataFinishFunction, participantID, studyID }) {\n  const [timeline, setTimeline] = useState([])\n\n  useEffect(() => {\n    tl(participantID, studyID).then((newTimeline) => setTimeline(newTimeline))\n  }, [participantID, studyID])\n\n  if (timeline.length === 0) {\n    return (\n      <div className=\"App height-100\">\n        <div className=\"centered-h-v\">Loading task</div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"App\">\n        <Experiment\n          settings={{\n            timeline: timeline,\n            preload_audio: [breathingAudio],\n            on_data_update: (data) => dataUpdateFunction(data),\n            on_finish: (data) => dataFinishFunction(data),\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default JsPsychExperiment\n","import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Login({ onLogin, envParticipantId, envStudyId, validationFunction }) {\n  // State variables for login screen\n  const [participantId, setParticipant] = useState(\"\");\n  const [studyId, setStudy] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    // Update based on environment variables\n    setParticipant(envParticipantId);\n    setStudy(envStudyId);\n  }, [envParticipantId, envStudyId]);\n\n  // Checks if forms are filled in\n  const validateForm = () => {\n    return participantId.length > 0 && studyId.length > 0;\n  };\n\n  // Function to log in participant\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Validates fields\n    validationFunction(participantId, studyId)\n      // Logs in depending on result from promise\n      .then((loggedIn) => {\n        if (loggedIn) {\n          onLogin(loggedIn, studyId, participantId);\n        } else {\n          setError(true);\n        }\n      });\n  };\n\n  return (\n    <div className=\"centered-h-v\">\n      <div className=\"width-50 max-width-600px\">\n        {error ? (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            The participant ID and study ID do not match\n          </div>\n        ) : null}\n        <Form className=\"centered-h-v\" onSubmit={handleSubmit}>\n          <Form.Group className=\"width-100\" size=\"lg\" controlId=\"participantId\">\n            <Form.Label>Participant ID</Form.Label>\n            <Form.Control\n              autoFocus\n              type=\"participantId\"\n              value={participantId}\n              onChange={(e) => setParticipant(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"width-100\" size=\"lg\" controlId=\"studyId\">\n            <Form.Label>Study ID</Form.Label>\n            <Form.Control\n              type=\"studyId\"\n              value={studyId}\n              onChange={(e) => setStudy(e.target.value)}\n            />\n          </Form.Group>\n          <Button\n            style={{ width: \"100%\" }}\n            block\n            size=\"lg\"\n            type=\"submit\"\n            disabled={!validateForm()}\n          >\n            Log In\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { jsPsych } from \"jspsych-react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport { getTurkUniqueId, sleep } from \"./lib/utils\";\nimport { initParticipant, addToFirebase } from \"./firebase\"\nimport { envConfig } from \"./config/main\"\nimport JsPsychExperiment from \"./components/JsPsychExperiment\"\nimport Login from \"./components/Login\"\nimport { version } from \"../package.json\";\n\nfunction App() {\n  const [loggedIn, setLogin] = useState(false);\n  const [ipcRenderer, setRenderer] = useState(false);\n  const [psiturk, setPsiturk] = useState(false);\n  const [participantID, setParticipantID] = useState(\"\");\n  const [studyID, setStudyID] = useState(\"\");\n  const [envParticipantId, setEnvParticipantId] = useState(\"\");\n  const [envStudyId, setEnvStudyId] = useState(\"\");\n  const [currentMethod, setMethod] = useState(\"default\");\n\n  const startDate = new Date().toISOString();\n\n  const query = new URLSearchParams(window.location.search);\n\n  // Validation functions for desktop case and firebase\n  const defaultValidation = async () => {\n    return true;\n  };\n  const firebaseValidation = (participantId, studyId) => {\n    return initParticipant(participantId, studyId, startDate);\n  };\n\n  // Adding data functions for firebase, electron adn Mturk\n  const defaultFunction = () => {};\n  const firebaseUpdateFunction = (data) => {\n    addToFirebase(data);\n  };\n  const desktopUpdateFunction = (data) => {\n    ipcRenderer.send(\"data\", data);\n  };\n  const psiturkUpdateFunction = (data) => {\n    psiturk.recordTrialData(data);\n  };\n\n  // On finish functions for electron, Mturk\n  const desktopFinishFunction = () => {\n    ipcRenderer.send(\"end\", \"true\");\n  };\n  const psiturkFinishFunction = () => {\n    const completePsiturk = async () => {\n      psiturk.saveData();\n      await sleep(5000);\n      psiturk.completeHIT();\n    };\n    completePsiturk();\n  };\n  const defaultFinishFunction = () => {\n    jsPsych.data.get().localSave('csv', 'neuro-task.csv')\n  }\n\n  // Function to add jspsych data on login\n  const setLoggedIn = useCallback(\n    (newLoggedIn, newStudyID, newParticipantID) => {\n      if (newLoggedIn) {\n        jsPsych.data.addProperties({\n          participant_id: newParticipantID,\n          study_id: newStudyID,\n          start_date: startDate,\n          timestamp: Date.now(),\n          task_version: version\n        });\n      }\n      setParticipantID(newParticipantID);\n      setStudyID(newStudyID);\n      setLogin(newLoggedIn);\n    },\n    [startDate]\n  );\n\n  // Login logic\n  useEffect(() => {\n    // For testing and debugging purposes\n    console.log(\"Environment configuration:\", envConfig);\n\n    // If on desktop\n    if (envConfig.USE_ELECTRON) {\n      const electron = window.require(\"electron\");\n      const renderer = electron.ipcRenderer;\n      setRenderer(renderer);\n      renderer.send(\"updateEnvironmentVariables\", envConfig);\n      // If at home, fill in fields based on environment variables\n      const credentials = renderer.sendSync(\"syncCredentials\");\n      if (credentials.envParticipantId) {\n        setEnvParticipantId(credentials.envParticipantId);\n      }\n      if (credentials.envStudyId) {\n        setEnvStudyId(credentials.envStudyId);\n      }\n      setMethod(\"desktop\");\n      // If online\n    } else {\n      if (envConfig.USE_MTURK) {\n        /* eslint-disable */\n        window.lodash = _.noConflict();\n        const turkId = getTurkUniqueId();\n        setPsiturk(new PsiTurk(turkId, \"/complete\"));\n        setMethod(\"mturk\");\n        setLoggedIn(true, \"mturk\", turkId);\n        /* eslint-enable */\n      }\n      // If firebase\n      else if (envConfig.USE_FIREBASE) {\n        setMethod(\"firebase\");\n        // Autologin with query parameters\n        const participantId = query.get(\"participantID\");\n        const studyId = query.get(\"studyID\");\n        if (participantId) {\n          setEnvParticipantId(participantId)\n        }\n        if (studyId) {\n          setEnvStudyId(studyId)\n        }\n      }\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {loggedIn ? (\n        <JsPsychExperiment\n          dataUpdateFunction={\n            {\n              desktop: desktopUpdateFunction,\n              firebase: firebaseUpdateFunction,\n              mturk: psiturkUpdateFunction,\n              default: defaultFunction,\n            }[currentMethod]\n          }\n          dataFinishFunction={\n            {\n              desktop: desktopFinishFunction,\n              mturk: psiturkFinishFunction,\n              firebase: defaultFunction,\n              default: defaultFinishFunction,\n            }[currentMethod]\n          }\n          participantID={participantID}\n          studyID={studyID}\n        />\n      ) : (\n        <Login\n          validationFunction={\n            {\n              desktop: defaultValidation,\n              default: defaultValidation,\n              firebase: firebaseValidation,\n            }[currentMethod]\n          }\n          envParticipantId={envParticipantId}\n          envStudyId={envStudyId}\n          onLogin={setLoggedIn}\n        />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}