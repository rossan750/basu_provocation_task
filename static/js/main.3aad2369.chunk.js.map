{"version":3,"sources":["config/main.js","lib/markup/stimuli.js","lib/markup/photodiode.js","config/trigger.js","trials/camera.js","assets/images/provocation-images/neutral sync nonrecursive //.(png|jpe?g|svg)$","assets/images/provocation-images/neutral/1_happy.jpg","assets/images/provocation-images/neutral/2_happy.jpg","assets/images/provocation-images/neutral/3_happy.jpg","assets/images/provocation-images/provoking sync nonrecursive //.(png|jpe?g|svg)$","assets/images/provocation-images/provoking/4_sad.jpeg","assets/images/provocation-images/provoking/5_sad.jpeg","assets/images/provocation-images/provoking/6_sad.jpeg","assets/images/provocation-images/provoking/7_unknown.jpeg","assets/images/practice-images/neutral sync nonrecursive //.(png|jpe?g|svg)$","assets/images/practice-images/neutral/istockphoto-888845986-612x612.jpg","assets/audio sync nonrecursive //.(m4a|mp3)$","assets/audio/PlaceHolderBreathingForButler.m4a","assets/audio/breathing_exercise.m4a","lib/utils.js","firebase.js","trials/fixation.js","lib/markup/fixation.js","trials/showImage.js","lib/taskUtils.js","trials/rateImage.js","timelines/taskTrial.js","timelines/taskBlock.js","trials/experimentStart.js","trials/holdUpMarker.js","trials/instructions.js","trials/adjustVolume.js","trials/countdown.js","trials/blockEnd.js","trials/experimentEnd.js","lib/taskSetUpUtils.js","timelines/main.js","components/JsPsychExperiment.jsx","components/Login.jsx","App.jsx","index.js"],"names":["__webpack_require__","d","__webpack_exports__","envConfig","imageSettings","numRequiredImages","ratingSettings","defaultBlockSettings","lang","practiceBlockSettings","breathingAudio","taskName","jspsych_react__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","n","_trigger__WEBPACK_IMPORTED_MODULE_2__","USE_MTURK","jsPsych","turk","turkInfo","outsideTurk","USE_VIDEO","process","REACT_APP_VIDEO","USE_FIREBASE","REACT_APP_FIREBASE","USE_ELECTRON","window","require","_unused","HIDE_FRAME_ELECTRON","REACT_APP_HIDE_FRAME_ELECTRON","USE_EEG","USE_PHOTODIODE","BREATHING_AUDIO","REACT_APP_BREATHING_AUDIO","width","height","importAll","r","keys","map","neutralImages","eventCodes","open_provoc_task","provokingImages","practiceImages","audio","_","filter","o","includes","console","log","min","max","canvasSize","circleRadius","cursorRadius","mlang","merge","num_repeats","images","neutral","provoking","repeats_per_condition","is_practice","USE_VOLUME","baseStimulus","element","prompt","arguments","length","undefined","concat","photodiodeGhostBox","pdSpotEncode","_config_main__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_1__","jquery__WEBPACK_IMPORTED_MODULE_1___default","ipcRenderer","electron","class_","taskCode","numBlinks","repeat_pulse_for","ms","i","callback","$","css","background-color","setTimeout","pulse_for","send","module","exports","fixation","evidence","show_ratings","rate","start_break","test_connect","camera","document","title","markup","instructions","type","stimulus","choices","continue","button","response_ends_trial","on_load","participantId","data","get","values","participant_id","getElementById","handleEvents","stream","recorder","srcObject","recordedChunks","MediaRecorder","mimeType","addEventListener","e","size","push","blob","media","reader","FileReader","fileName","Date","now","onload","readyState","buffer","Buffer","result","readAsArrayBuffer","saveBlob","Blob","navigator","mediaDevices","getUserMedia","video","then","desktopCapturer","getSources","types","_ref","Object","_home_runner_work_task_provocation_task_provocation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_runner_work_task_provocation_task_provocation_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","sources","_iterator","_step","source","wrap","_context","prev","next","_home_runner_work_task_provocation_task_provocation_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__","s","done","value","name","mandatory","chromeMediaSource","chromeMediaSourceId","id","catch","error","err","f","stop","_x","apply","this","on_finish","cameraCapture","start","screenCapture","./1_happy.jpg","./2_happy.jpg","./3_happy.jpg","webpackContext","req","webpackContextResolve","Error","code","resolve","p","./4_sad.jpeg","./5_sad.jpeg","./6_sad.jpeg","./7_unknown.jpeg","./istockphoto-888845986-612x612.jpg","./PlaceHolderBreathingForButler.m4a","./breathing_exercise.m4a","sleep","Promise","jitter50","base","offset","Math","floor","random","jitter","deepCopy","obj","JSON","parse","stringify","shuffleArray","array","temporaryValue","randomIndex","currentIndex","getTurkUniqueId","workerId","assignmentId","config","apiKey","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","firebase","initializeApp","db","firestore","location","hostname","useEmulator","getObjectURLs","asyncToGenerator","regenerator_default","_callee2","participantID","studyID","folderType","folderURL","storage","ref","objects","URLs","_context2","listAll","sent","items","_ref2","item","getDownloadURL","abrupt","_x4","all","_x2","_x3","initParticipant","studyId","startDate","collection","doc","set","start_time","app_version","appVersion","app_platform","platform","results","addToFirebase","study_id","start_date","update","FieldValue","arrayUnion","_firebase$firestore","TimeStamp","GeoPoint","duration","jittered","green","hideCursor","trial_duration","NO_KEYS","showImage","image","addClass","isColliding","x1","y1","r1","x2","y2","dx","dy","sqrt","getCircle","x","y","circles","circle_r","c","CANVAS_SIZE","CIRCLE_RADIUS","CURSOR_RADIUS","canvasHTML","rateImage","async","func","showCode","rateCode","innerHTML","animation","canvas","querySelector","ctx","getContext","path","rt","addToPath","elapsed","center","slice","PI","range","val","theta","sin","cos","getCircles","canvasDraw","clearRect","font","textBaseline","textAlign","fillStyle","fillText","drawPrompt","radius","cursor_radius","hovered","forEach","circle","beginPath","arc","fill","toString","drawNumbers","drawFixation","cursorSize","moveTo","lineTo","lineWidth","strokeStyle","stroke","drawCursor","requestPointerLock","warn","handleMoveListener","originalEvent","movementX","movementY","newdx","sign","newdy","updated","requestAnimationFrame","bind","handleClickListener","end_rt","unbind","click","taskTrial","condition","timeline","taskBlock","blockSettings","b","startingOptions","pop","toConsumableArray","generateStartingOpts","experimentStart","task","holdUpMarker","focus","screenOne","welcome","p1","p2","screenTwo","screenThree","screenFour","rate_practice","screenFive","no_talking","screenSix","instruction_end","instructions1","show_clickable_nav","pages","breathing","instructions2","adjustVolume","adjust_volume","buildCountdown","text","time","blockEnd","curBlock","totalBlocks","block","end_p1","end_p2","end_p3","break_p1","break_p2","break_p3","trial_ends_after_audio","experimentEnd","end","app","fs","getFirebaseImages","newImages","checkNumImages","numNeutral","numProvoking","errorMessage","alert","getLocalImages","category","localImagePath","join","getPath","imagePath","readdirSync","getImages","_newImages","remote","t0","taskSetUp","newBlocks","countdown","message","tl","primaryTimeline","mturkTimeline","_x5","JsPsychExperiment","dataUpdateFunction","dataFinishFunction","_useState","useState","_useState2","slicedToArray","setTimeline","useEffect","newTimeline","react_default","createElement","className","experiment","settings","preload_audio","on_data_update","Login","onLogin","envParticipantId","envStudyId","validationFunction","setParticipant","_useState3","_useState4","setStudy","_useState5","_useState6","setError","role","Form","onSubmit","preventDefault","loggedIn","Group","controlId","Label","Control","autoFocus","onChange","target","Button","style","disabled","App","setLogin","setRenderer","psiturk","setPsiturk","_useState7","_useState8","setParticipantID","_useState9","_useState10","setStudyID","_useState11","_useState12","setEnvParticipantId","_useState13","_useState14","setEnvStudyId","_useState15","_useState16","currentMethod","setMethod","_useState17","_useState18","reject","setReject","toISOString","query","URLSearchParams","search","defaultValidation","defaultFunction","setLoggedIn","useCallback","newLoggedIn","newStudyID","newParticipantID","addProperties","task_version","version","renderer","credentials","sendSync","lodash","noConflict","turkId","PsiTurk","Fragment","components_JsPsychExperiment","desktop","mturk","recordTrialData","default","saveData","completeHIT","completePsiturk","components_Login","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.3aad2369.chunk.js","sourcesContent":["// config/main.js\n// This is the main configuration file where universal and default settings should be placed.\n// These settins can then be imported anywhere in the app as they are exported at the botom of the file.\n\nimport { jsPsych } from \"jspsych-react\";\nimport _ from \"lodash\";\nimport { eventCodes } from \"./trigger\";\nimport requireContext from \"require-context.macro\";\n\n// is this mechanical turk?\nconst USE_MTURK = !jsPsych.turk.turkInfo().outsideTurk;\nconst USE_VIDEO = process.env.REACT_APP_VIDEO === \"true\";\nconst USE_FIREBASE = process.env.REACT_APP_FIREBASE === \"true\";\nlet USE_ELECTRON = true;\n\ntry {\n  window.require(\"electron\");\n} catch {\n  USE_ELECTRON = false;\n}\n\n// whether or not to ask the participant to adjust the volume\nconst USE_VOLUME = process.env.REACT_APP_VOLUME === \"true\";\n// whether or not to set a frame in the Electron window, see electron.js\nconst HIDE_FRAME_ELECTRON = process.env.REACT_APP_HIDE_FRAME_ELECTRON === \"true\" && USE_ELECTRON;\n// whether or not the EEG/event marker is available\nconst USE_EEG = process.env.REACT_APP_USE_EEG === \"true\" && USE_ELECTRON;\n// whether or not the photodiode is in use\nconst USE_PHOTODIODE = process.env.REACT_APP_USE_PHOTODIODE === \"true\" && USE_ELECTRON;\n\nconst BREATHING_AUDIO = process.env.REACT_APP_BREATHING_AUDIO || \"breathing_exercise\"\n\nconst imageSettings = {\n  width: 600,\n  height: 600,\n};\n\n// how many of each type of image are required if loading images from disk\nconst numRequiredImages = 10;\n\n// import images\nconst importAll = (r) => {\n  return r.keys().map(r);\n};\n\n// audio codes\nconst audioCodes = {\n  frequency: 100 * (eventCodes.open_provoc_task - 9),\n  type: \"sine\",\n};\n\n// UPDATE THIS PATH TO CHANGE IMAGE FOLDER\nconst neutralImages = importAll(\n  requireContext(\n    \"../assets/images/provocation-images/neutral\",\n    false,\n    /\\.(png|jpe?g|svg)$/\n  )\n);\nconst provokingImages = importAll(\n  requireContext(\n    \"../assets/images/provocation-images/provoking\",\n    false,\n    /\\.(png|jpe?g|svg)$/\n  )\n);\n\nconst practiceImages = importAll(\n  requireContext(\n    \"../assets/images/practice-images/neutral\",\n    false,\n    /\\.(png|jpe?g|svg)$/\n  )\n);\n\nconst audio = importAll(\n  requireContext(\"../assets/audio\", false, /\\.(m4a|mp3)$/)\n);\n\nconst breathingAudio = _.filter(audio, (o) =>\n  o.includes(BREATHING_AUDIO)\n)[0];\n\nconsole.log(breathingAudio);\n\nconst ratingSettings = {\n  min: 0,\n  max: 10,\n  canvasSize: 640, // canvas is a square\n  circleRadius: 28,\n  cursorRadius: 7.5,\n};\n\n// get language file\nconst lang = require(\"../language/en_us.json\");\nif (USE_MTURK) {\n  // if this is mturk, merge in the mturk specific language\n  const mlang = require(\"../language/en_us.mturk.json\");\n  _.merge(lang, mlang);\n}\n\nconst defaultBlockSettings = {\n  num_repeats: 2, // how many blocks to have\n  images: {\n    neutral: neutralImages,\n    provoking: provokingImages,\n  },\n  repeats_per_condition: 3, // number of times every condition is repeated\n  is_practice: false,\n};\n\nconst practiceBlockSettings = {\n  images: {\n    neutral: practiceImages,\n    provoking: [],\n  },\n  repeats_per_condition: 1, // number of times every condition is repeated\n  is_practice: true,\n};\n\nconst taskName = \"Provocation\";\n\nconst envConfig = {\n  USE_MTURK,\n  USE_VIDEO,\n  USE_ELECTRON,\n  USE_FIREBASE,\n  USE_EEG,\n  HIDE_FRAME_ELECTRON,\n  USE_PHOTODIODE,\n  USE_VOLUME\n}\n\nexport {\n  envConfig,\n  imageSettings,\n  numRequiredImages,\n  ratingSettings,\n  defaultBlockSettings,\n  lang,\n  eventCodes,\n  practiceBlockSettings,\n  importAll,\n  breathingAudio,\n  audioCodes,\n  taskName,\n};\n","const baseStimulus = (element, prompt=false) => {\n  const class_ = (prompt) ? 'main-prompt': 'task-container'\n  return `<div class=${class_}>${element}</div>`\n}\n\n\nexport {\n  baseStimulus\n}\n","import { eventCodes, envConfig  } from  '../../config/main'\nimport $ from 'jquery'\n\n// conditionally load electron and psiturk based on envConfig.MTURK config variable\nlet ipcRenderer = false;\nif (envConfig.USE_ELECTRON) {\n  const electron = window.require('electron');\n  ipcRenderer  = electron.ipcRenderer;\n}\n\n// Relies on styling in App.css, generate PD spot\nconst photodiodeGhostBox = () => {\n\tconst class_ = envConfig.USE_PHOTODIODE ? 'visible' : 'invisible'\n\n  return `<div class=\"photodiode-box ${class_}\" id=\"photodiode-box\">\n\t\t\t\t\t\t\t\t\t<span id=\"photodiode-spot\" class=\"photodiode-spot\"></span>\n  \t\t\t\t\t\t\t\t</div>`\n}\n\nconst pdSpotEncode = (taskCode) => {\n  function pulse_for(ms, callback) {\n      $('.photodiode-spot').css({\"background-color\": \"white\"})\n      setTimeout(() => {\n        $('.photodiode-spot').css({\"background-color\": \"black\"})\n        callback()\n      }, ms)\n    }\n\n    function repeat_pulse_for(ms, i) {\n      if (i > 0) {\n        pulse_for(ms, () => {\n          setTimeout(() => {\n            repeat_pulse_for(ms, i-1)\n          }, ms)\n        })\n      }\n    }\n\n\tif (envConfig.USE_PHOTODIODE) {\n\t\tconst blinkTime = 40\n\t\tlet numBlinks = taskCode\n    if (taskCode < eventCodes.open_provoc_task) numBlinks = 1;\n\t\trepeat_pulse_for(blinkTime, numBlinks)\n    if (ipcRenderer) {\n      ipcRenderer.send(\"trigger\", taskCode)\n      setTimeout(function(){ipcRenderer.send('trigger', 0)}, 5)\n    }\n\t}\n}\n\nexport {\n\tphotodiodeGhostBox,\n\tpdSpotEncode\n}\n","// Event trigger settings - used in both the react app (renderer) and the electron app (main)\n\n// NOTE: THESE CODES MUST MATCH public/config/trigger.js - MAKE SURE THE CODES MATCH\n\nconst eventCodes = {\n\topen_provoc_task: 13,\n\tfixation: 1,\n\tevidence: 5,\n\tshow_ratings: 7,\n\trate: 2,\n\tstart_break: 8,\n\ttest_connect: 32\n}\n\n// this is module.exports isntead of just exports as it is also imported into the electron app\nmodule.exports = {\n\teventCodes\n}\n","import { lang, taskName, envConfig } from \"../config/main\";\nimport { photodiodeGhostBox } from \"../lib/markup/photodiode\";\nimport { baseStimulus } from \"../lib/markup/stimuli\";\nimport { jsPsych } from \"jspsych-react\";\n\nlet ipcRenderer = false;\nif (envConfig.USE_ELECTRON) {\n  const electron = window.require(\"electron\");\n  ipcRenderer = electron.ipcRenderer;\n}\n\nfunction saveBlob(blob, media, participantId) {\n  let reader = new FileReader();\n  let fileName = `pid_${participantId}_${media}_${Date.now()}.webm`;\n  reader.onload = function () {\n    if (reader.readyState === 2) {\n      const buffer = new Buffer(reader.result);\n      ipcRenderer.send(\"save_video\", fileName, buffer);\n    }\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\nconst camera = () => {\n  document.title = taskName;\n  let markup = `\n  <div class=\"d-flex flex-column align-items-center\">\n  <p>${lang.instructions.camera}</p>\n  <video id=\"camera\" width=\"640\" height=\"480\" autoplay></video>\n  </div>\n  `;\n  let stimulus = baseStimulus(markup, false) + photodiodeGhostBox();\n\n  return {\n    type: \"html_button_response\",\n    stimulus: stimulus,\n    choices: [lang.prompt.continue.button],\n    response_ends_trial: true,\n    on_load: () => {\n      // Grab elements, create settings, etc.\n      // Elements for taking the snapshot\n      const participantId = jsPsych.data.get().values()[0].participant_id;\n\n      let camera = document.getElementById(\"camera\");\n\n      const handleEvents = function (stream, recorder) {\n        console.log(stream);\n        if (recorder === \"cameraCapture\") {\n          camera.srcObject = stream;\n        }\n\n        const options = { mimeType: \"video/webm\" };\n        const recordedChunks = [];\n        window[recorder] = new MediaRecorder(stream, options);\n\n        window[recorder].addEventListener(\"dataavailable\", function (e) {\n          if (e.data.size > 0) {\n            recordedChunks.push(e.data);\n          }\n        });\n\n        window[recorder].addEventListener(\"stop\", function () {\n          const blob = new Blob(recordedChunks);\n          saveBlob(blob, recorder, participantId);\n        });\n      };\n\n      navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then((stream) => handleEvents(stream, \"cameraCapture\"));\n\n      const { desktopCapturer } = window.require(\"electron\");\n\n      desktopCapturer\n        .getSources({ types: [\"window\"] })\n        .then(async (sources) => {\n          for (const source of sources) {\n            if (source.name === taskName) {\n              navigator.mediaDevices\n                .getUserMedia({\n                  video: {\n                    mandatory: {\n                      chromeMediaSource: \"desktop\",\n                      chromeMediaSourceId: source.id,\n                    },\n                  },\n                })\n                .then((stream) => {\n                  handleEvents(stream, \"screenCapture\");\n                })\n                .catch((error) => console.log(error));\n            }\n          }\n        });\n    },\n    on_finish: () => {\n      if (envConfig.USE_ELECTRON) {\n        window.cameraCapture.start();\n        window.screenCapture.start();\n      }\n    },\n  };\n};\n\nexport default camera;","var map = {\n\t\"./1_happy.jpg\": 51,\n\t\"./2_happy.jpg\": 52,\n\t\"./3_happy.jpg\": 53\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 50;","module.exports = __webpack_public_path__ + \"static/media/1_happy.18aba42e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2_happy.9545f071.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3_happy.c893ae7f.jpg\";","var map = {\n\t\"./4_sad.jpeg\": 55,\n\t\"./5_sad.jpeg\": 56,\n\t\"./6_sad.jpeg\": 57,\n\t\"./7_unknown.jpeg\": 58\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 54;","module.exports = __webpack_public_path__ + \"static/media/4_sad.104fb27c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/5_sad.ef6dac84.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/6_sad.bb879b1e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/7_unknown.c348d28c.jpeg\";","var map = {\n\t\"./istockphoto-888845986-612x612.jpg\": 60\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 59;","module.exports = __webpack_public_path__ + \"static/media/istockphoto-888845986-612x612.23164b56.jpg\";","var map = {\n\t\"./PlaceHolderBreathingForButler.m4a\": 62,\n\t\"./breathing_exercise.m4a\": 63\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61;","module.exports = __webpack_public_path__ + \"static/media/PlaceHolderBreathingForButler.baf2b4f7.m4a\";","module.exports = __webpack_public_path__ + \"static/media/breathing_exercise.b4b71d9b.m4a\";","import { jsPsych } from \"jspsych-react\";\n\n// add a random number between 0 and offset to the base number\nconst jitter = (base, offset) =>\n  base + Math.floor(Math.random() * Math.floor(offset));\n\nconst sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n// add a random number between 0 and 50 to the base number\nconst jitter50 = (base) => jitter(base, 50);\n\n// flip a coin\nconst randomTrue = () => Math.random() > 0.5;\n\n// deeply copy an object\nconst deepCopy = (obj) => JSON.parse(JSON.stringify(obj));\n\n// format a number as a dollar amount\nconst formatDollars = (amount) => \"$\" + parseFloat(amount).toFixed(2);\n\n// shuffle the items in an array randomly\nconst shuffleArray = (array) => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n  // While there remain elements to shuffle\n  while (0 !== currentIndex) {\n    // Pick a remaining element\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    // And swap it with the current element\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\n\n// create a pre-trial wait period\nconst generateWaitSet = (trial, waitTime) => {\n  let waitTrial = Object.assign({}, trial);\n  waitTrial.trial_duration = waitTime;\n  waitTrial.response_ends_trial = false;\n  waitTrial.prompt = \"-\";\n\n  return [waitTrial, trial];\n};\n\nconst keypressResponse = (info) => {\n  const data = {\n    key_press: info.key,\n  };\n\n  jsPsych.finishTrial(data);\n};\n\nconst startKeypressListener = () => {\n  return jsPsych.pluginAPI.getKeyboardResponse({\n    callback_function: keypressResponse,\n    valid_responses: jsPsych.ALL_KEYS,\n    persist: false,\n  });\n};\n\nconst getTurkUniqueId = () => {\n  const turkInfo = jsPsych.turk.turkInfo();\n  return `${turkInfo.workerId}:${turkInfo.assignmentId}`;\n};\n\nconst beep = (audioCodes) => {\n  const context = new AudioContext();\n  const o = context.createOscillator();\n  const g = context.createGain();\n  o.type = audioCodes.type;\n  o.connect(g);\n  o.frequency.setValueAtTime(audioCodes.frequency, 0);\n  g.connect(context.destination);\n  o.start();\n  o.stop(context.currentTime + 0.4);\n};\n\nexport {\n  jitter,\n  sleep,\n  jitter50,\n  randomTrue,\n  deepCopy,\n  formatDollars,\n  shuffleArray,\n  generateWaitSet,\n  startKeypressListener,\n  getTurkUniqueId,\n  beep,\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst COLLECTION_NAME = \"participant_responses\";\nconst config = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId || \"no-firebase\",\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n};\n// Initialize firebase app\nfirebase.initializeApp(config);\n// Get the firestore instance, and use the emulator if running locally\nlet db = firebase.firestore();\nif (window.location.hostname === \"localhost\") {\n  db.useEmulator(\"localhost\", 8080);\n}\n\n/**\n * Gets the download URLs for all objects in a Firebase storage folder. These can be\n * referenced in a src tag to display the objects, if they are images.\n * @param {string} participantID The participant ID.\n * @param {string} studyID The study ID.\n * @param {string} folderType The type of folder, either \"neutral\" or \"provoking\".\n * @returns An array of promises, each containing a download URL for an object.\n */\nconst getObjectURLs = async (participantID, studyID, folderType) => {\n  const folderURL = `${studyID}/${participantID}/${folderType}`;\n  const storage = firebase.storage();\n  const ref = storage.ref(folderURL);\n  const objects = await ref.listAll();\n  let URLs = objects.items.map(async (item) => await item.getDownloadURL());\n  return await Promise.all(URLs);\n};\n\n// Add participant data and trial data to db\nconst initParticipant = (participantId, studyId, startDate) => {\n  // return promise with value true if participant and study id match, false otherwise\n  return db\n    .collection(COLLECTION_NAME)\n    .doc(studyId)\n    .collection(\"participants\")\n    .doc(participantId)\n    .collection(\"data\")\n    .doc(startDate)\n    .set({\n      start_time: startDate,\n      app_version: window.navigator.appVersion,\n      app_platform: window.navigator.platform,\n      results: [],\n    })\n    .then(() => {\n      return true;\n    })\n    .catch(() => {\n      return false;\n    });\n};\n\n// add individual trials to db\nconst addToFirebase = (data) => {\n  const participantID = data.participant_id;\n  const studyID = data.study_id;\n  const startDate = data.start_date;\n  db.collection(COLLECTION_NAME)\n    .doc(studyID)\n    .collection(\"participants\")\n    .doc(participantID)\n    .collection(\"data\")\n    .doc(startDate)\n    .update(\"results\", firebase.firestore.FieldValue.arrayUnion(data))\n    .then(() => {\n      return true;\n    })\n    .catch((error) => {\n      console.error(\"Error adding to Firebase:\", error);\n      return false;\n    });\n};\n\n// Export types that exists in Firestore\n// This is not always necessary, but it's used in other examples\nconst { TimeStamp, GeoPoint } = firebase.firestore;\nexport {\n  db,\n  TimeStamp,\n  GeoPoint,\n  COLLECTION_NAME,\n  initParticipant,\n  addToFirebase,\n};\n\nexport { getObjectURLs };\nexport default firebase;\n","import { eventCodes } from '../config/main'\nimport { jitter50 } from '../lib/utils'\nimport { pdSpotEncode, photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { fixationHTML } from '../lib/markup/fixation'\nimport { jsPsych } from 'jspsych-react'\nimport $ from 'jquery'\n\nconst fixation = (duration, jittered=true, green=false, hideCursor=false) => {\n  let stimulus = fixationHTML(green) + photodiodeGhostBox()\n\n  const code = eventCodes.fixation;\n\n  const trial_duration = jittered ? jitter50(duration) : duration\n\n  return {\n    type: 'html_keyboard_response',\n    choices: jsPsych.NO_KEYS,\n    stimulus: stimulus,\n    response_ends_trial: false,\n    trial_duration: trial_duration,\n    on_load: () => {\n      pdSpotEncode(code)\n      if (hideCursor) $('html').css('cursor', 'none')\n    },\n    on_finish: (data) => {\n      data.code = code\n      if (hideCursor) $('html').css('cursor', 'auto')\n    }\n  }\n}\n\nexport default fixation\n","export const fixationHTML = (color) => {\n  if (color) {\n    return '<div class=\"task-container\"><div id=\"fixation-dot\" class=\"color-green\"> </div></div>'\n  } else {\n    return '<div class=\"task-container\"><div id=\"fixation-dot\" class=\"color-white\"> </div></div>'\n  }\n}\n","import { eventCodes, imageSettings } from '../config/main'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\nimport $ from 'jquery'\nimport { jitter50 } from '../lib/utils'\n\n\nconst showImage = (image, duration) => {\n  const code = eventCodes.evidence\n\n  return {\n    type: 'image_keyboard_response',\n    stimulus: image,\n    prompt: photodiodeGhostBox(),\n    response_ends_trial: false,\n    trial_duration: jitter50(duration),\n    on_load: () => {\n      $('#jspsych-image-keyboard-response-stimulus').addClass('image')\n      $('#jspsych-image-keyboard-response-stimulus').height(imageSettings.height)\n      $('#jspsych-image-keyboard-response-stimulus').width(imageSettings.width)\n      $('html').css('cursor', 'none')\n      pdSpotEncode(code)\n    },\n    on_finish: (data) => {\n      data.code = code\n      $('html').css('cursor', 'auto')\n    }\n  }\n}\n\nexport default showImage\n","// utilities specific to this app/task\nimport _ from \"lodash\";\nimport { deepCopy, randomTrue, shuffleArray } from \"./utils\";\n\n// initialize starting conditions for each trial within a block\n// each repetition set is independently randomized then concatenated\n// no more than 3 images from a set can repeat in a row\nconst generateStartingOpts = (b) => {\n  let startingOptions = [];\n\n  for (let i = 0; i < b.repeats_per_condition; i++) {\n    let neutralImages = shuffleArray(deepCopy(b.images.neutral));\n    let provokingImages = shuffleArray(deepCopy(b.images.provoking));\n\n    while (neutralImages.length > 0 && provokingImages.length > 0) {\n      if (neutralImages.length - provokingImages.length >= 3) {\n        startingOptions.push(neutralImages.pop());\n      } else if (provokingImages.length - neutralImages.length >= 3) {\n        startingOptions.push(provokingImages.pop());\n      } else if (randomTrue()) {\n        startingOptions.push(neutralImages.pop());\n      } else {\n        startingOptions.push(provokingImages.pop());\n      }\n    }\n\n    startingOptions.push(...neutralImages);\n    startingOptions.push(...provokingImages);\n  }\n\n  return startingOptions;\n};\n\nconst getCircles = (start, stop, size) => {\n  const center = size / 2;\n  const r = center * 0.85;\n  const n = stop - start + 1;\n\n  const slice = Math.PI / (n - 1);\n\n  return _.range(start, stop + 1).map((val) => {\n    let theta = slice * val - Math.PI / 2;\n    let x = r * Math.sin(theta) + center;\n    let y = r * Math.cos(theta) + center;\n    return { n: val, x: x, y: y };\n  });\n};\n\nconst isColliding = (x1, y1, r1, x2, y2) => {\n  let dx = x1 - x2;\n  let dy = y1 - y2;\n  let distance = Math.sqrt(dx * dx + dy * dy);\n\n  return distance < r1;\n};\n\nconst getCircle = (x, y, r, circles, circle_r) => {\n  for (let i = 0; i < circles.length; i++) {\n    let c = circles[i];\n    if (isColliding(c.x, c.y, circle_r, x, y, r)) {\n      return c;\n    }\n  }\n\n  return null;\n};\n\nconst drawNumbers = (ctx, circles, radius, x, y, cursor_radius) => {\n  ctx.font = radius * 0.8 + \"px arial\";\n  ctx.textBaseline = \"middle\";\n  ctx.textAlign = \"center\";\n\n  let hovered = getCircle(x, y, cursor_radius, circles, radius);\n\n  circles.forEach((circle) => {\n    // draw circle\n    if (circle === hovered) {\n      ctx.fillStyle = \"#778899\"; // medium grey\n    } else {\n      ctx.fillStyle = \"#D3D3D3\"; // light grey\n    }\n    ctx.beginPath();\n    ctx.arc(circle.x, circle.y, radius, 0, 2 * Math.PI, true);\n    ctx.fill();\n\n    // draw text\n    ctx.fillStyle = \"#000000\"; // black\n    ctx.fillText(circle.n.toString(), circle.x, circle.y + 3.5);\n  });\n};\n\nconst drawPrompt = (ctx, rt, size) => {\n  // only draw if it's been 10 seconds\n  if (rt < 10000) return;\n\n  ctx.font = 20 + \"px arial\";\n  ctx.textBaseline = \"middle\";\n  ctx.textAlign = \"center\";\n\n  // draw text\n  ctx.fillStyle = \"#ffffff\"; // white\n  ctx.fillText(\"Please select a rating\", size / 2, size * 0.25);\n};\n\nconst drawFixation = (ctx, size) => {\n  ctx.fillStyle = \"#ffffff\";\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, 7.5, 0, 2 * Math.PI, true);\n  ctx.fill();\n};\n\nconst drawCursor = (ctx, x, y, cursorSize) => {\n  ctx.beginPath();\n  ctx.moveTo(x, y - cursorSize);\n  ctx.lineTo(x, y + cursorSize);\n\n  ctx.moveTo(x - cursorSize, y);\n  ctx.lineTo(x + cursorSize, y);\n\n  // Line color\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = \"#a6a6a6\";\n\n  ctx.stroke();\n};\n\nexport {\n  generateStartingOpts,\n  getCircles,\n  getCircle,\n  drawNumbers,\n  drawPrompt,\n  drawFixation,\n  drawCursor,\n};\n","import { eventCodes, ratingSettings } from '../config/main'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\nimport { getCircles, getCircle, drawNumbers, drawPrompt, drawFixation, drawCursor } from '../lib/taskUtils'\nimport $ from 'jquery'\n\n// make sure cursor radius is such that it can only touch one circle at a time\nconst CANVAS_SIZE = ratingSettings.canvasSize\nconst CIRCLE_RADIUS = ratingSettings.circleRadius\nconst CURSOR_RADIUS = ratingSettings.cursorRadius\n\nconst canvasHTML = `<canvas width=\"${CANVAS_SIZE}\" height=\"${CANVAS_SIZE}\" id=\"jspsych-canvas\">\n    Your browser does not support HTML5 canvas\n  </canvas>`\n\nconst rateImage = () => {\n    let stimulus = `<div class=\"task-container\">` + canvasHTML + photodiodeGhostBox() + `</div>`\n\n    return {\n      type: 'call_function',\n      async: true,\n      func: (done) => {\n        // send trigger events\n        const showCode = eventCodes.show_ratings\n        const rateCode = eventCodes.rate\n\n        const start = Date.now()\n\n        // add stimulus to the DOM\n        document.getElementById('jspsych-content').innerHTML = stimulus\n        // $('#jspsych-content').addClass('task-container')\n\n        // set up canvas\n        let canvas = document.querySelector('#jspsych-canvas');\n        let ctx = canvas.getContext('2d');\n        let animation\n\n        // hide the mouse\n        $('html').css('cursor', 'none')\n\n        let w = $('#jspsych-canvas').width()\n        let x = w / 2\n        let dx = 0 // start at rest\n\n        let h = $('#jspsych-canvas').height()\n        let y = h / 2\n        let dy = 0 // start at rest\n\n        let path = []\n        const rt = () => Date.now() - start\n        const addToPath = () => path.push({x: x, y: y, elapsed: rt()})\n        addToPath()\n\n        let circles = getCircles(ratingSettings.min, ratingSettings.max, CANVAS_SIZE)\n\n        const canvasDraw = () => {\n          // transparent background\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n          drawPrompt(ctx, rt(), CANVAS_SIZE)\n\n          drawNumbers(ctx, circles, CIRCLE_RADIUS, x, y, CURSOR_RADIUS)\n\n          drawFixation(ctx, CANVAS_SIZE)\n\n          // draw the cursor\n          drawCursor(ctx, x, y, CURSOR_RADIUS)\n        }\n        // show ratings\n        canvasDraw();\n        pdSpotEncode(showCode)\n\n        // make sure canvas re-draws at 10 seconds to get prompt\n        setTimeout(canvasDraw, 10000)\n\n        // request control of the cursor from the dom\n        try {\n          canvas.requestPointerLock();\n        } catch {\n          console.warn(\"pointer lock denied\");\n        }\n\n        const handleMoveListener = (e) => {\n          x += e.originalEvent.movementX;\n          y += e.originalEvent.movementY;\n\n          // if direction changes, add to path\n          let newdx = Math.sign(e.originalEvent.movementX)\n          let newdy = Math.sign(e.originalEvent.movementY)\n\n          let updated = false\n          if ( newdx !== dx && newdx !== 0 ) {\n            addToPath()\n            dx = newdx\n            updated = true\n          }\n\n          if ( newdy !== dy && newdy !== 0 ) {\n            if (!updated) addToPath()\n            dy = newdy\n          }\n\n          // keep circle in canvas\n          if (x > canvas.width - CURSOR_RADIUS) {\n            x = canvas.width - CURSOR_RADIUS;\n          }\n          if (y > canvas.height - CURSOR_RADIUS) {\n            y = canvas.height - CURSOR_RADIUS;\n          }\n          if (x < CURSOR_RADIUS) {\n            x = CURSOR_RADIUS;\n          }\n          if (y < CURSOR_RADIUS) {\n            y = CURSOR_RADIUS;\n          }\n\n          // re-draw with updates\n          if (!animation) {\n            animation = requestAnimationFrame( () => {\n              animation = null;\n              canvasDraw();\n            });\n          }\n        }\n\n        const handleClickListener = () => {\n            // find circle that was clicked (or null if none)\n            let circle = getCircle(x, y, CURSOR_RADIUS, circles, CIRCLE_RADIUS)\n\n            if (circle) { // rating complete\n              const end_rt = rt()\n              pdSpotEncode(rateCode)\n\n              // add final click spot to path\n              addToPath()\n\n              // free event listeners\n              $(document).unbind('mousemove', handleMoveListener)\n              $(document).unbind('click', handleClickListener)\n\n              setTimeout(\n                  () => {\n                    // re-show the mouse\n                    $('html').css('cursor', 'auto')\n\n                    done({circle: circle, click: {x: x, y: y}, code: [showCode, rateCode], rt: end_rt, path: path})\n                  },\n                  500)\n            }\n        }\n\n        // Bind event listener to document\n        $(document).bind('mousemove', handleMoveListener)\n        $(document).bind('click', handleClickListener)\n      }\n    }\n}\n\nexport default rateImage\n","// import trials\nimport fixation from '../trials/fixation'\nimport showImage from '../trials/showImage'\nimport rateImage from '../trials/rateImage'\n\nconst taskTrial = (condition) => {\n\n  // timeline\n  let timeline = [\n    // show condition\n    fixation(2000, true, false, true), // jittered, white, hidden cursor\n    fixation(200, false, true, true), // not jittered, green, hidden cursor\n    showImage(condition, 3000),\n\n    // end the trial\n    rateImage()\n  ]\n\n    return {\n  \t\ttype: 'html_keyboard_response',\n  \t\ttimeline: timeline\n  \t}\n}\n\nexport default taskTrial\n","import taskTrial from './taskTrial'\nimport { generateStartingOpts } from '../lib/taskUtils'\n\n\nconst taskBlock = (blockSettings) => {\n\n\tconst startingOpts = generateStartingOpts(blockSettings)\n\tlet timeline = startingOpts.map( (image) => taskTrial(image))\n\n\treturn {\n\t\ttype: 'html_keyboard_response',\n\t\ttimeline: timeline\n\t}\n}\n\nexport default taskBlock\n","import { lang } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst experimentStart = () => {\n  let stimulus = baseStimulus(`<div><h1>${lang.task.name}</h1></div>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_button_response',\n    stimulus: stimulus,\n    prompt: '',\n    choices: [lang.prompt.continue.button],\n  }\n}\n\nexport default experimentStart\n","import { lang } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst holdUpMarker = () => {\n  let stimulus = baseStimulus(`<div>\n    <h2 id='usb-alert'></h2>\n    <br><p>${lang.prompt.focus}</p>\n    </div>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_button_response',\n    stimulus: stimulus,\n    choices: [lang.prompt.continue.button]\n  }\n}\n\nexport default holdUpMarker\n","import { lang } from '../config/main'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\n\nconst screenOne = baseStimulus(`\n    <div class='instructions'>\n    <h1>${lang.instructions.welcome}</h1>\n    <p>${lang.instructions.p1}</p>\n    <p>${lang.instructions.p2}</p>\n    </div>\n    `, true)\n\nconst screenTwo = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.fixation}</p>\n    <div id=\"fixation-dot\" class=\"color-white\"></div>\n    </div>\n    `, true)\n\nconst screenThree = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.rate}</p>\n    </div>\n    `, true)\n\nconst screenFour = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.rate_practice}</p>\n    </div>\n    `, true)\n\nconst screenFive = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.no_talking}</p>\n    </div>\n    `, true)\n\nconst screenSix = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.instruction_end}</p>\n    </div>\n    `, true)\n\nconst breathing = baseStimulus(`\n  <div class='instructions'>\n  <p>${lang.instructions.breathing}</p>\n  </div>\n  `, true)\n\nconst instructions1 = {\n  type: 'instructions',\n  show_clickable_nav: true,\n  pages: [\n    screenOne,\n    breathing,\n    screenTwo,\n    screenThree,\n    screenFour,\n  ]\n}\n\nconst instructions2 = {\n  type: 'instructions',\n  show_clickable_nav: true,\n  pages: [\n    screenFive,\n    screenSix,\n  ]\n}\n\nexport {\n  instructions1,\n  instructions2\n}\n","import { lang } from '../config/main'\nimport { baseStimulus } from '../lib/markup/stimuli';\n\nconst adjustVolume = () => {\n    const stimulus = baseStimulus(`\n    <div class='instructions'>\n    <h1>${lang.instructions.adjust_volume}</h1>\n    </div>\n    `, true)\n    \n    return {\n        type: 'html_button_response',\n        stimulus: stimulus,\n        choices: [ lang.prompt.continue.button ],\n        response_ends_trial: true\n    }\n}\n\nexport default adjustVolume","import * as _ from 'lodash'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\n// build a countdown transition with the given text and number of seconds\nconst buildCountdown = (text, time) => {\n  const times = _.range(time, 0 , -1)\n  const timeline = times.map( (val) => {return({ prompt: `<h1>${val}</h1>` })})\n\n  return ({\n    type: 'html_keyboard_response',\n    stimulus: baseStimulus(`<h3>${text}</h3>`, true),\n    trial_duration: 1000,\n    response_ends_trial: false,\n    timeline:  timeline\n  })\n}\n\nexport default buildCountdown\n","import { lang, breathingAudio, eventCodes } from '../config/main'\nimport { baseStimulus } from '../lib/markup/stimuli'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\n\nconst blockEnd = (curBlock, totalBlocks) => {\n  const code = eventCodes.start_break;\n\n  let prompt = baseStimulus(`\n    <div class='instructions'>\n  <h1>${lang.block.end_p1}\n    ${curBlock}\n    ${lang.block.end_p2}\n    ${totalBlocks}\n    ${lang.block.end_p3}</h1>\n  <h2>${lang.block.break_p1}\n    ${curBlock + 1}\n    ${lang.block.break_p2}\n    ${totalBlocks}\n    ${lang.block.break_p3}</h2>\n  </div>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'audio_keyboard_response',\n    stimulus: breathingAudio,\n    prompt: prompt,\n    choices: [],\n    response_ends_trial: false,\n    trial_ends_after_audio: true,\n    on_load: () => {\n      pdSpotEncode(code)\n    },\n    on_finish: (data) => {\n      data.code = code\n    }\n  }\n}\n\nexport default blockEnd\n","import { lang, envConfig } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst experimentEnd = (duration) => {\n  let stimulus = baseStimulus(`<h1>${lang.task.end}</h1>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_keyboard_response',\n    stimulus: stimulus,\n    trial_duration: duration,\n    on_load: () => {\n      if (envConfig.USE_VIDEO) {\n        console.log('finished')\n        window.cameraCapture.stop()\n        window.screenCapture.stop()\n      }\n    }\n  }\n}\n\nexport default experimentEnd\n","import path from 'path'\nimport { getObjectURLs } from '../firebase'\nimport {\n  envConfig,\n  numRequiredImages\n} from '../config/main'\n\nlet app = false\nlet fs = false\nlet ipcRenderer = false\n\n/**\n * Sets the experiment images from the Firebase storage bucket.\n * The function updates this object's \"images\" field to contain the images from Firebase.\n */\nconst getFirebaseImages = async (participantID, studyID) => {\n  const newImages = {\n    neutral: [],\n    provoking: []\n  }\n  newImages.neutral = await getObjectURLs(participantID, studyID, 'neutral')\n  newImages.provoking = await getObjectURLs(participantID, studyID, 'provoking')\n  return newImages\n}\n\nconst checkNumImages = (newImages) => {\n  // check the number of loaded images matches what is expected\n  let numNeutral = newImages.neutral.length\n  let numProvoking = newImages.provoking.length\n  if (numNeutral !== numRequiredImages || numProvoking !== numRequiredImages) {\n    const errorMessage = `Number of images provided does not meet requirement.  Found ${numNeutral} neutral images and ${numProvoking} provoking images, the settings for this task requires ${numRequiredImages} of each type.`\n    if (envConfig.USE_ELECTRON) {\n      ipcRenderer.send('error', errorMessage)\n    } else {\n      alert(errorMessage)\n    }\n  }\n}\n\nconst getLocalImages = (participantID, category) => {\n  const localImagePath = path.join(\n    app.getPath('desktop'),\n    'provocation-images',\n    `${participantID}`\n  )\n\n  const imagePath = path.join(localImagePath, category)\n  const items = fs.readdirSync(imagePath)\n  return items.map(\n    (image) => `file://` + path.join(imagePath, image)\n  )\n}\n\nconst getImages = async (participantID, studyID) => {\n  if (envConfig.USE_ELECTRON) {\n    app = window.require('electron').remote.app\n    fs = window.require('fs')\n    const electron = window.require('electron')\n    ipcRenderer = electron.ipcRenderer\n    try {\n      const newImages = {};\n      newImages.neutral = getLocalImages(participantID, 'neutral')\n      newImages.provoking = getLocalImages(participantID, 'provoking')\n\n      checkNumImages(newImages)\n      return newImages\n    } catch (error) {\n      console.warn('Error loading local files - using default images')\n      ipcRenderer.send(\n        'error',\n        `Could not load images from local device. - ${error}`\n      )\n    }\n  } else if (envConfig.USE_FIREBASE) {\n    const newImages = await getFirebaseImages(participantID, studyID)\n    checkNumImages(newImages)\n    return newImages\n  }\n}\n\nexport { getImages }\n","import taskBlock from \"./taskBlock\";\nimport experimentStart from \"../trials/experimentStart\";\nimport holdUpMarker from \"../trials/holdUpMarker\";\nimport { instructions1, instructions2 } from \"../trials/instructions\";\nimport adjustVolume from \"../trials/adjustVolume\";\nimport camera from \"../trials/camera\";\nimport buildCountdown from '../trials/countdown'\nimport blockEnd from '../trials/blockEnd'\nimport experimentEnd from '../trials/experimentEnd'\nimport {\n  envConfig,\n  defaultBlockSettings,\n  practiceBlockSettings, lang,\n} from '../config/main'\nimport { getImages } from '../lib/taskSetUpUtils'\n\nconst taskSetUp = async (participantID, studyID, blockSettings) => {\n  const newImages = await getImages(participantID, studyID)\n\n  blockSettings.images.neutral = newImages.neutral\n  blockSettings.images.provoking = newImages.provoking\n\n  let newBlocks = []\n  for (let i = 1; i < blockSettings.num_repeats; i++) {\n    newBlocks.push(\n      buildCountdown(lang.countdown.message, 3),\n      taskBlock(blockSettings),\n      blockEnd(i, blockSettings.num_repeats)\n    )\n  }\n\n  return newBlocks\n}\n\nconst tl = async (participantID, studyID) => {\n  let timeline = [experimentStart()];\n\n  if (envConfig.USE_VOLUME) timeline.push(adjustVolume());\n\n  if (envConfig.USE_VIDEO) timeline.push(camera());\n\n  if (envConfig.USE_EEG) timeline.push(holdUpMarker());\n\n  timeline.push(\n    instructions1,\n    taskBlock(practiceBlockSettings),\n    instructions2\n  );\n\n  const newBlocks = await taskSetUp(participantID, studyID, defaultBlockSettings)\n\n  timeline.push(...newBlocks)\n\n  timeline.push(experimentEnd(5000))\n\n  const primaryTimeline = timeline;\n\n  const mturkTimeline = [];\n\n  return envConfig.USE_MTURK ? mturkTimeline : primaryTimeline\n}\n\nexport { tl }\n","import React, { useState, useEffect } from \"react\"\nimport { Experiment } from \"jspsych-react\"\nimport { tl } from \"../timelines/main\"\nimport { breathingAudio } from \"../config/main\"\n\nfunction JsPsychExperiment ({ dataUpdateFunction, dataFinishFunction, participantID, studyID }) {\n  const [timeline, setTimeline] = useState([])\n\n  useEffect(() => {\n    tl(participantID, studyID).then((newTimeline) => setTimeline(newTimeline))\n  }, [participantID, studyID])\n\n  if (timeline.length === 0) {\n    return (\n      <div className=\"App height-100\">\n        <div className=\"centered-h-v\">Loading task</div>\n      </div>\n    )\n  } else {\n    return (\n      <div className=\"App\">\n        <Experiment\n          settings={{\n            timeline: timeline,\n            preload_audio: [breathingAudio],\n            on_data_update: (data) => dataUpdateFunction(data),\n            on_finish: (data) => dataFinishFunction(data),\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default JsPsychExperiment","import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Login({ onLogin, envParticipantId, envStudyId, validationFunction }) {\n  // State variables for login screen\n  const [participantId, setParticipant] = useState(\"\");\n  const [studyId, setStudy] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    // Update based on environment variables\n    setParticipant(envParticipantId);\n    setStudy(envStudyId);\n  }, [envParticipantId, envStudyId]);\n\n  // Checks if forms are filled in\n  const validateForm = () => {\n    return participantId.length > 0 && studyId.length > 0;\n  };\n\n  // Function to log in participant\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Validates fields\n    validationFunction(participantId, studyId)\n      // Logs in depending on result from promise\n      .then((loggedIn) => {\n        if (loggedIn) {\n          onLogin(loggedIn, studyId, participantId);\n        } else {\n          setError(true);\n        }\n      });\n  };\n\n  return (\n    <div className=\"centered-h-v\">\n      <div className=\"width-50 max-width-600px\">\n        {error ? (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            The participant ID and study ID do not match\n          </div>\n        ) : null}\n        <Form className=\"centered-h-v\" onSubmit={handleSubmit}>\n          <Form.Group className=\"width-100\" size=\"lg\" controlId=\"participantId\">\n            <Form.Label>Participant ID</Form.Label>\n            <Form.Control\n              autoFocus\n              type=\"participantId\"\n              value={participantId}\n              onChange={(e) => setParticipant(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"width-100\" size=\"lg\" controlId=\"studyId\">\n            <Form.Label>Study ID</Form.Label>\n            <Form.Control\n              type=\"studyId\"\n              value={studyId}\n              onChange={(e) => setStudy(e.target.value)}\n            />\n          </Form.Group>\n          <Button\n            style={{ width: \"100%\" }}\n            block\n            size=\"lg\"\n            type=\"submit\"\n            disabled={!validateForm()}\n          >\n            Log In\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { jsPsych } from \"jspsych-react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport { getTurkUniqueId, sleep } from \"./lib/utils\";\nimport { initParticipant, addToFirebase } from \"./firebase\"\nimport { envConfig } from \"./config/main\"\nimport JsPsychExperiment from \"./components/JsPsychExperiment\"\nimport Login from \"./components/Login\"\nimport { version } from \"../package.json\";\n\nfunction App() {\n  const [loggedIn, setLogin] = useState(false);\n  const [ipcRenderer, setRenderer] = useState(false);\n  const [psiturk, setPsiturk] = useState(false);\n  const [participantID, setParticipantID] = useState(\"\");\n  const [studyID, setStudyID] = useState(\"\");\n  const [envParticipantId, setEnvParticipantId] = useState(\"\");\n  const [envStudyId, setEnvStudyId] = useState(\"\");\n  const [currentMethod, setMethod] = useState(\"default\");\n  const [reject, setReject] = useState(false);\n\n  const startDate = new Date().toISOString();\n\n  const query = new URLSearchParams(window.location.search);\n\n  // Validation functions for desktop case and firebase\n  const defaultValidation = async () => {\n    return true;\n  };\n  const firebaseValidation = (participantId, studyId) => {\n    return initParticipant(participantId, studyId, startDate);\n  };\n\n  // Adding data functions for firebase, electron adn Mturk\n  const defaultFunction = () => {};\n  const firebaseUpdateFunction = (data) => {\n    addToFirebase(data);\n  };\n  const desktopUpdateFunction = (data) => {\n    ipcRenderer.send(\"data\", data);\n  };\n  const psiturkUpdateFunction = (data) => {\n    psiturk.recordTrialData(data);\n  };\n\n  // On finish functions for electron, Mturk\n  const desktopFinishFunction = () => {\n    ipcRenderer.send(\"end\", \"true\");\n  };\n  const psiturkFinishFunction = () => {\n    const completePsiturk = async () => {\n      psiturk.saveData();\n      await sleep(5000);\n      psiturk.completeHIT();\n    };\n    completePsiturk();\n  };\n\n  // Function to add jspsych data on login\n  const setLoggedIn = useCallback(\n    (newLoggedIn, newStudyID, newParticipantID) => {\n      if (newLoggedIn) {\n        jsPsych.data.addProperties({\n          participant_id: newParticipantID,\n          study_id: newStudyID,\n          start_date: startDate,\n          task_version: version\n        });\n      }\n      setParticipantID(newParticipantID);\n      setStudyID(newStudyID);\n      setLogin(newLoggedIn);\n    },\n    [startDate]\n  );\n\n  // Login logic\n  useEffect(() => {\n    // For testing and debugging purposes\n    console.log(\"Environment configuration:\", envConfig);\n\n    // If on desktop\n    if (envConfig.USE_ELECTRON) {\n      const electron = window.require(\"electron\");\n      const renderer = electron.ipcRenderer;\n      setRenderer(renderer);\n      renderer.send(\"updateEnvironmentVariables\", envConfig);\n      // If at home, fill in fields based on environment variables\n      const credentials = renderer.sendSync(\"syncCredentials\");\n      if (credentials.envParticipantId) {\n        setEnvParticipantId(credentials.envParticipantId);\n      }\n      if (credentials.envStudyId) {\n        setEnvStudyId(credentials.envStudyId);\n      }\n      setMethod(\"desktop\");\n      // If online\n    } else {\n      if (envConfig.USE_MTURK) {\n        /* eslint-disable */\n        window.lodash = _.noConflict();\n        const turkId = getTurkUniqueId();\n        setPsiturk(new PsiTurk(turkId, \"/complete\"));\n        setMethod(\"mturk\");\n        setLoggedIn(true, \"mturk\", turkId);\n        /* eslint-enable */\n      }\n      // If firebase\n      else if (envConfig.USE_FIREBASE) {\n        setMethod(\"firebase\");\n        // Autologin with query parameters\n        const participantId = query.get(\"participantID\");\n        const studyId = query.get(\"studyID\");\n        if (participantId) {\n          setEnvParticipantId(participantId)\n        }\n        if (studyId) {\n          setEnvStudyId(studyId)\n        }\n      } else {\n        setReject(true);\n      }\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  if (reject) {\n    return (\n      <div className=\"centered-h-v\">\n        <div className=\"width-50 alert alert-danger\">\n          Please tell your task provider to enable Firebase.\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <>\n        {loggedIn ? (\n          <JsPsychExperiment\n            dataUpdateFunction={\n              {\n                desktop: desktopUpdateFunction,\n                firebase: firebaseUpdateFunction,\n                mturk: psiturkUpdateFunction,\n                default: defaultFunction,\n              }[currentMethod]\n            }\n            dataFinishFunction={\n              {\n                desktop: desktopFinishFunction,\n                mturk: psiturkFinishFunction,\n                firebase: defaultFunction,\n                default: defaultFunction,\n              }[currentMethod]\n            }\n            participantID={participantID}\n            studyID={studyID}\n          />\n        ) : (\n          <Login\n            validationFunction={\n              {\n                desktop: defaultValidation,\n                default: defaultValidation,\n                firebase: firebaseValidation,\n              }[currentMethod]\n            }\n            envParticipantId={envParticipantId}\n            envStudyId={envStudyId}\n            onLogin={setLoggedIn}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}