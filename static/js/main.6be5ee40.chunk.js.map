{"version":3,"sources":["config/main.js","lib/markup/photodiode.js","lib/markup/stimuli.js","config/trigger.js","trials/camera.js","assets/images/provocation-images/neutral sync nonrecursive //.(png|jpe?g|svg)$","assets/images/provocation-images/neutral/1_happy.jpg","assets/images/provocation-images/neutral/2_happy.jpg","assets/images/provocation-images/neutral/3_happy.jpg","assets/images/provocation-images/provoking sync nonrecursive //.(png|jpe?g|svg)$","assets/images/provocation-images/provoking/4_sad.jpeg","assets/images/provocation-images/provoking/5_sad.jpeg","assets/images/provocation-images/provoking/6_sad.jpeg","assets/images/provocation-images/provoking/7_unknown.jpeg","assets/images/practice-images/neutral sync nonrecursive //.(png|jpe?g|svg)$","assets/images/practice-images/neutral/istockphoto-888845986-612x612.jpg","assets/audio sync nonrecursive //.(m4a|mp3)$","assets/audio/breathing_exercise.m4a","lib/utils.js","firebase.js","trials/experimentStart.js","trials/holdUpMarker.js","trials/fixation.js","lib/markup/fixation.js","trials/showImage.js","lib/taskUtils.js","trials/rateImage.js","timelines/taskTrial.js","timelines/taskBlock.js","trials/experimentEnd.js","trials/blockEnd.js","trials/countdown.js","trials/startCode.js","timelines/taskSetUp.js","trials/instructions.js","trials/adjustVolume.js","timelines/main.js","components/JsPsychExperiment.jsx","components/Login.jsx","App.jsx","index.js"],"names":["__webpack_require__","d","__webpack_exports__","envConfig","imageSettings","numRequiredImages","ratingSettings","defaultBlockSettings","lang","practiceBlockSettings","breathingAudio","audioCodes","taskName","jspsych_react__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","n","_trigger__WEBPACK_IMPORTED_MODULE_2__","USE_MTURK","jsPsych","turk","turkInfo","outsideTurk","USE_VIDEO","process","REACT_APP_VIDEO","USE_FIREBASE","REACT_APP_FIREBASE","USE_ELECTRON","window","require","_unused","USE_VOLUME","REACT_APP_VOLUME","HIDE_FRAME_ELECTRON","REACT_APP_HIDE_FRAME_ELECTRON","USE_EEG","REACT_APP_USE_EEG","USE_PHOTODIODE","REACT_APP_USE_PHOTODIODE","width","height","importAll","r","keys","map","frequency","eventCodes","open_provoc_task","type","neutralImages","provokingImages","practiceImages","audio","_","filter","o","includes","console","log","min","max","canvasSize","circleRadius","cursorRadius","mlang","merge","num_repeats","images","neutral","provoking","repeats_per_condition","is_practice","photodiodeGhostBox","pdSpotEncode","_config_main__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_1__","jquery__WEBPACK_IMPORTED_MODULE_1___default","ipcRenderer","electron","class_","concat","taskCode","numBlinks","repeat_pulse_for","ms","i","callback","$","css","background-color","setTimeout","pulse_for","send","baseStimulus","element","prompt","arguments","length","undefined","module","exports","fixation","evidence","show_ratings","rate","start_break","test_connect","camera","document","title","markup","instructions","stimulus","choices","continue","button","response_ends_trial","on_load","participantId","data","get","values","participant_id","getElementById","handleEvents","stream","recorder","srcObject","recordedChunks","MediaRecorder","mimeType","addEventListener","e","size","push","blob","media","reader","FileReader","fileName","Date","now","onload","readyState","buffer","Buffer","result","readAsArrayBuffer","saveBlob","Blob","navigator","mediaDevices","getUserMedia","video","then","desktopCapturer","getSources","types","_ref","Object","_home_runner_work_task_provocation_task_provocation_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_runner_work_task_provocation_task_provocation_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","sources","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","source","wrap","_context","prev","next","Symbol","iterator","done","value","name","mandatory","chromeMediaSource","chromeMediaSourceId","id","catch","error","t0","return","finish","stop","_x","apply","this","on_finish","cameraCapture","start","screenCapture","./1_happy.jpg","./2_happy.jpg","./3_happy.jpg","webpackContext","req","webpackContextResolve","Error","code","resolve","p","./4_sad.jpeg","./5_sad.jpeg","./6_sad.jpeg","./7_unknown.jpeg","./istockphoto-888845986-612x612.jpg","./breathing_exercise.m4a","sleep","Promise","jitter50","base","offset","Math","floor","random","jitter","deepCopy","obj","JSON","parse","stringify","shuffleArray","array","temporaryValue","randomIndex","currentIndex","getTurkUniqueId","workerId","assignmentId","config","apiKey","REACT_APP_apiKey","authDomain","REACT_APP_authDomain","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","firebase","initializeApp","db","firestore","location","hostname","useEmulator","getObjectURLs","asyncToGenerator","regenerator_default","_callee2","participantID","studyID","folderType","folderURL","storage","ref","objects","URLs","_context2","listAll","sent","items","_ref2","item","getDownloadURL","abrupt","_x4","all","_x2","_x3","initParticipant","studyId","startDate","collection","doc","set","start_time","app_version","appVersion","app_platform","platform","results","addToFirebase","study_id","start_date","update","FieldValue","arrayUnion","TimeStamp","GeoPoint","experimentStart","task","holdUpMarker","focus","duration","jittered","green","hideCursor","trial_duration","NO_KEYS","showImage","image","addClass","isColliding","x1","y1","r1","x2","y2","dx","dy","sqrt","getCircle","x","y","circles","circle_r","c","CANVAS_SIZE","CIRCLE_RADIUS","CURSOR_RADIUS","canvasHTML","rateImage","async","func","showCode","rateCode","innerHTML","animation","canvas","querySelector","ctx","getContext","path","rt","addToPath","elapsed","center","slice","PI","range","val","theta","sin","cos","getCircles","canvasDraw","clearRect","font","textBaseline","textAlign","fillStyle","fillText","drawPrompt","radius","cursor_radius","hovered","forEach","circle","beginPath","arc","fill","toString","drawNumbers","drawFixation","cursorSize","moveTo","lineTo","lineWidth","strokeStyle","stroke","drawCursor","requestPointerLock","handleMoveListener","originalEvent","movementX","movementY","newdx","sign","newdy","updated","requestAnimationFrame","bind","handleClickListener","end_rt","unbind","click","taskTrial","condition","timeline","taskBlock","blockSettings","b","startingOptions","pop","toConsumableArray","generateStartingOpts","experimentEnd","end","blockEnd","curBlock","totalBlocks","block","end_p1","end_p2","end_p3","break_p1","break_p2","break_p3","trial_ends_after_audio","buildCountdown","text","time","startCode","setting_up","context","AudioContext","createOscillator","g","createGain","connect","setValueAtTime","destination","currentTime","beep","app","fs","getFirebaseImages","newImages","select","checkNumImages","numNeutral","numProvoking","alert","setImages","localImagePath","neutralImagePath","provokingImagePath","neutralItems","provokingItems","_newImages","remote","join","getPath","readdirSync","taskSetUp","addTasks","on_start","_on_start","_callee3","_context3","addNodeToEndOfTimeline","countdown","message","screenOne","welcome","p1","p2","screenTwo","screenThree","screenFour","rate_practice","screenFive","no_talking","screenSix","instruction_end","instructions1","show_clickable_nav","pages","breathing","instructions2","adjustVolume","adjust_volume","primaryTimeline","tl","JsPsychExperiment","dataUpdateFunction","dataFinishFunction","react_default","createElement","className","experiment","settings","preload_audio","on_data_update","Login","onLogin","envParticipantId","envStudyId","validationFunction","_useState","useState","_useState2","slicedToArray","setParticipant","_useState3","_useState4","setStudy","_useState5","_useState6","setError","useEffect","role","Form","onSubmit","preventDefault","loggedIn","Group","controlId","Label","Control","autoFocus","onChange","target","Button","style","disabled","App","setLogin","setRenderer","psiturk","setPsiturk","_useState7","_useState8","setEnvParticipantId","_useState9","_useState10","setEnvStudyId","_useState11","_useState12","currentMethod","setMethod","_useState13","_useState14","reject","setReject","toISOString","query","URLSearchParams","search","defaultValidation","defaultFunction","setLoggedIn","useCallback","newLoggedIn","addProperties","task_version","version","renderer","credentials","sendSync","lodash","noConflict","turkId","PsiTurk","Fragment","components_JsPsychExperiment","desktop","mturk","recordTrialData","default","saveData","completeHIT","completePsiturk","components_Login","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.6be5ee40.chunk.js","sourcesContent":["// config/main.js\n// This is the main configuration file where universal and default settings should be placed.\n// These settins can then be imported anywhere in the app as they are exported at the botom of the file.\n\nimport { jsPsych } from \"jspsych-react\";\nimport _ from \"lodash\";\nimport { eventCodes } from \"./trigger\";\nimport requireContext from \"require-context.macro\";\n\n// is this mechanical turk?\nconst USE_MTURK = !jsPsych.turk.turkInfo().outsideTurk;\nconst USE_VIDEO = process.env.REACT_APP_VIDEO === \"true\";\nconst USE_FIREBASE = process.env.REACT_APP_FIREBASE === \"true\";\nlet USE_ELECTRON = true;\n\ntry {\n  window.require(\"electron\");\n} catch {\n  USE_ELECTRON = false;\n}\n\n// whether or not to ask the participant to adjust the volume\nconst USE_VOLUME = process.env.REACT_APP_VOLUME === \"true\";\n// whether or not to set a frame in the Electron window, see electron.js\nconst HIDE_FRAME_ELECTRON = process.env.REACT_APP_HIDE_FRAME_ELECTRON === \"true\" && USE_ELECTRON;\n// whether or not the EEG/event marker is available\nconst USE_EEG = process.env.REACT_APP_USE_EEG === \"true\" && USE_ELECTRON;\n// whether or not the photodiode is in use\nconst USE_PHOTODIODE = process.env.REACT_APP_USE_PHOTODIODE === \"true\" && USE_ELECTRON;\n\nconst imageSettings = {\n  width: 600,\n  height: 600,\n};\n\n// how many of each type of image are required if loading images from disk\nconst numRequiredImages = 10;\n\n// import images\nconst importAll = (r) => {\n  return r.keys().map(r);\n};\n\n// audio codes\nconst audioCodes = {\n  frequency: 100 * (eventCodes.open_provoc_task - 9),\n  type: \"sine\",\n};\n\n// UPDATE THIS PATH TO CHANGE IMAGE FOLDER\nconst neutralImages = importAll(\n  requireContext(\n    \"../assets/images/provocation-images/neutral\",\n    false,\n    /\\.(png|jpe?g|svg)$/\n  )\n);\nconst provokingImages = importAll(\n  requireContext(\n    \"../assets/images/provocation-images/provoking\",\n    false,\n    /\\.(png|jpe?g|svg)$/\n  )\n);\n\nconst practiceImages = importAll(\n  requireContext(\n    \"../assets/images/practice-images/neutral\",\n    false,\n    /\\.(png|jpe?g|svg)$/\n  )\n);\n\nconst audio = importAll(\n  requireContext(\"../assets/audio\", false, /\\.(m4a|mp3)$/)\n);\n\nconst breathingAudio = _.filter(audio, (o) =>\n  o.includes(`breathing_exercise`)\n)[0];\n\nconsole.log(breathingAudio);\n\nconst ratingSettings = {\n  min: 0,\n  max: 10,\n  canvasSize: 640, // canvas is a square\n  circleRadius: 28,\n  cursorRadius: 7.5,\n};\n\n// get language file\nconst lang = require(\"../language/en_us.json\");\nif (USE_MTURK) {\n  // if this is mturk, merge in the mturk specific language\n  const mlang = require(\"../language/en_us.mturk.json\");\n  _.merge(lang, mlang);\n}\n\nconst defaultBlockSettings = {\n  num_repeats: 2, // how many blocks to have\n  images: {\n    neutral: neutralImages,\n    provoking: provokingImages,\n  },\n  repeats_per_condition: 3, // number of times every condition is repeated\n  is_practice: false,\n};\n\nconst practiceBlockSettings = {\n  images: {\n    neutral: practiceImages,\n    provoking: [],\n  },\n  repeats_per_condition: 1, // number of times every condition is repeated\n  is_practice: true,\n};\n\nconst taskName = \"Provocation\";\n\nconst envConfig = {\n  USE_MTURK,\n  USE_VIDEO,\n  USE_ELECTRON,\n  USE_FIREBASE,\n  USE_EEG,\n  HIDE_FRAME_ELECTRON,\n  USE_PHOTODIODE,\n  USE_VOLUME,\n}\n\nexport {\n  envConfig,\n  imageSettings,\n  numRequiredImages,\n  ratingSettings,\n  defaultBlockSettings,\n  lang,\n  eventCodes,\n  practiceBlockSettings,\n  importAll,\n  breathingAudio,\n  audioCodes,\n  taskName,\n};\n","import { eventCodes, envConfig  } from  '../../config/main'\nimport $ from 'jquery'\n\n// conditionally load electron and psiturk based on envConfig.MTURK config variable\nlet ipcRenderer = false;\nif (envConfig.USE_ELECTRON) {\n  const electron = window.require('electron');\n  ipcRenderer  = electron.ipcRenderer;\n}\n\n// Relies on styling in App.css, generate PD spot\nconst photodiodeGhostBox = () => {\n\tconst class_ = envConfig.USE_PHOTODIODE ? 'visible' : 'invisible'\n\n  return `<div class=\"photodiode-box ${class_}\" id=\"photodiode-box\">\n\t\t\t\t\t\t\t\t\t<span id=\"photodiode-spot\" class=\"photodiode-spot\"></span>\n  \t\t\t\t\t\t\t\t</div>`\n}\n\nconst pdSpotEncode = (taskCode) => {\n  function pulse_for(ms, callback) {\n      $('.photodiode-spot').css({\"background-color\": \"white\"})\n      setTimeout(() => {\n        $('.photodiode-spot').css({\"background-color\": \"black\"})\n        callback()\n      }, ms)\n    }\n\n    function repeat_pulse_for(ms, i) {\n      if (i > 0) {\n        pulse_for(ms, () => {\n          setTimeout(() => {\n            repeat_pulse_for(ms, i-1)\n          }, ms)\n        })\n      }\n    }\n\n\tif (envConfig.USE_PHOTODIODE) {\n\t\tconst blinkTime = 40\n\t\tlet numBlinks = taskCode\n    if (taskCode < eventCodes.open_provoc_task) numBlinks = 1;\n\t\trepeat_pulse_for(blinkTime, numBlinks)\n    if (ipcRenderer) {\n      ipcRenderer.send(\"trigger\", taskCode)\n      setTimeout(function(){ipcRenderer.send('trigger', 0)}, 5)\n    }\n\t}\n}\n\nexport {\n\tphotodiodeGhostBox,\n\tpdSpotEncode\n}\n","const baseStimulus = (element, prompt=false) => {\n  const class_ = (prompt) ? 'main-prompt': 'task-container'\n  return `<div class=${class_}>${element}</div>`\n}\n\n\nexport {\n  baseStimulus\n}\n","// Event trigger settings - used in both the react app (renderer) and the electron app (main)\n\n// NOTE: THESE CODES MUST MATCH public/config/trigger.js - MAKE SURE THE CODES MATCH\n\nconst eventCodes = {\n\topen_provoc_task: 13,\n\tfixation: 1,\n\tevidence: 5,\n\tshow_ratings: 7,\n\trate: 2,\n\tstart_break: 8,\n\ttest_connect: 32\n}\n\n// this is module.exports isntead of just exports as it is also imported into the electron app\nmodule.exports = {\n\teventCodes\n}\n","import { lang, taskName, envConfig } from \"../config/main\";\nimport { photodiodeGhostBox } from \"../lib/markup/photodiode\";\nimport { baseStimulus } from \"../lib/markup/stimuli\";\nimport { jsPsych } from \"jspsych-react\";\n\nlet ipcRenderer = false;\nif (envConfig.USE_ELECTRON) {\n  const electron = window.require(\"electron\");\n  ipcRenderer = electron.ipcRenderer;\n}\n\nfunction saveBlob(blob, media, participantId) {\n  let reader = new FileReader();\n  let fileName = `pid_${participantId}_${media}_${Date.now()}.webm`;\n  reader.onload = function () {\n    if (reader.readyState === 2) {\n      const buffer = new Buffer(reader.result);\n      ipcRenderer.send(\"save_video\", fileName, buffer);\n    }\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\nconst camera = () => {\n  document.title = taskName;\n  let markup = `\n  <div class=\"d-flex flex-column align-items-center\">\n  <p>${lang.instructions.camera}</p>\n  <video id=\"camera\" width=\"640\" height=\"480\" autoplay></video>\n  </div>\n  `;\n  let stimulus = baseStimulus(markup, false) + photodiodeGhostBox();\n\n  return {\n    type: \"html_button_response\",\n    stimulus: stimulus,\n    choices: [lang.prompt.continue.button],\n    response_ends_trial: true,\n    on_load: () => {\n      // Grab elements, create settings, etc.\n      // Elements for taking the snapshot\n      const participantId = jsPsych.data.get().values()[0].participant_id;\n\n      let camera = document.getElementById(\"camera\");\n\n      const handleEvents = function (stream, recorder) {\n        console.log(stream);\n        if (recorder === \"cameraCapture\") {\n          camera.srcObject = stream;\n        }\n\n        const options = { mimeType: \"video/webm\" };\n        const recordedChunks = [];\n        window[recorder] = new MediaRecorder(stream, options);\n\n        window[recorder].addEventListener(\"dataavailable\", function (e) {\n          if (e.data.size > 0) {\n            recordedChunks.push(e.data);\n          }\n        });\n\n        window[recorder].addEventListener(\"stop\", function () {\n          const blob = new Blob(recordedChunks);\n          saveBlob(blob, recorder, participantId);\n        });\n      };\n\n      navigator.mediaDevices\n        .getUserMedia({ video: true })\n        .then((stream) => handleEvents(stream, \"cameraCapture\"));\n\n      const { desktopCapturer } = window.require(\"electron\");\n\n      desktopCapturer\n        .getSources({ types: [\"window\"] })\n        .then(async (sources) => {\n          for (const source of sources) {\n            if (source.name === taskName) {\n              navigator.mediaDevices\n                .getUserMedia({\n                  video: {\n                    mandatory: {\n                      chromeMediaSource: \"desktop\",\n                      chromeMediaSourceId: source.id,\n                    },\n                  },\n                })\n                .then((stream) => {\n                  handleEvents(stream, \"screenCapture\");\n                })\n                .catch((error) => console.log(error));\n            }\n          }\n        });\n    },\n    on_finish: () => {\n      if (envConfig.USE_ELECTRON) {\n        window.cameraCapture.start();\n        window.screenCapture.start();\n      }\n    },\n  };\n};\n\nexport default camera;","var map = {\n\t\"./1_happy.jpg\": 49,\n\t\"./2_happy.jpg\": 50,\n\t\"./3_happy.jpg\": 51\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48;","module.exports = __webpack_public_path__ + \"static/media/1_happy.18aba42e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2_happy.9545f071.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3_happy.c893ae7f.jpg\";","var map = {\n\t\"./4_sad.jpeg\": 53,\n\t\"./5_sad.jpeg\": 54,\n\t\"./6_sad.jpeg\": 55,\n\t\"./7_unknown.jpeg\": 56\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 52;","module.exports = __webpack_public_path__ + \"static/media/4_sad.104fb27c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/5_sad.ef6dac84.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/6_sad.bb879b1e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/7_unknown.c348d28c.jpeg\";","var map = {\n\t\"./istockphoto-888845986-612x612.jpg\": 58\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 57;","module.exports = __webpack_public_path__ + \"static/media/istockphoto-888845986-612x612.23164b56.jpg\";","var map = {\n\t\"./breathing_exercise.m4a\": 60\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 59;","module.exports = __webpack_public_path__ + \"static/media/breathing_exercise.b4b71d9b.m4a\";","import { jsPsych } from \"jspsych-react\";\n\n// add a random number between 0 and offset to the base number\nconst jitter = (base, offset) =>\n  base + Math.floor(Math.random() * Math.floor(offset));\n\nconst sleep = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\n// add a random number between 0 and 50 to the base number\nconst jitter50 = (base) => jitter(base, 50);\n\n// flip a coin\nconst randomTrue = () => Math.random() > 0.5;\n\n// deeply copy an object\nconst deepCopy = (obj) => JSON.parse(JSON.stringify(obj));\n\n// format a number as a dollar amount\nconst formatDollars = (amount) => \"$\" + parseFloat(amount).toFixed(2);\n\n// shuffle the items in an array randomly\nconst shuffleArray = (array) => {\n  let currentIndex = array.length;\n  let temporaryValue, randomIndex;\n  // While there remain elements to shuffle\n  while (0 !== currentIndex) {\n    // Pick a remaining element\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    // And swap it with the current element\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n  return array;\n};\n\n// create a pre-trial wait period\nconst generateWaitSet = (trial, waitTime) => {\n  let waitTrial = Object.assign({}, trial);\n  waitTrial.trial_duration = waitTime;\n  waitTrial.response_ends_trial = false;\n  waitTrial.prompt = \"-\";\n\n  return [waitTrial, trial];\n};\n\nconst keypressResponse = (info) => {\n  const data = {\n    key_press: info.key,\n  };\n\n  jsPsych.finishTrial(data);\n};\n\nconst startKeypressListener = () => {\n  return jsPsych.pluginAPI.getKeyboardResponse({\n    callback_function: keypressResponse,\n    valid_responses: jsPsych.ALL_KEYS,\n    persist: false,\n  });\n};\n\nconst getTurkUniqueId = () => {\n  const turkInfo = jsPsych.turk.turkInfo();\n  return `${turkInfo.workerId}:${turkInfo.assignmentId}`;\n};\n\nconst beep = (audioCodes) => {\n  const context = new AudioContext();\n  const o = context.createOscillator();\n  const g = context.createGain();\n  o.type = audioCodes.type;\n  o.connect(g);\n  o.frequency.setValueAtTime(audioCodes.frequency, 0);\n  g.connect(context.destination);\n  o.start();\n  o.stop(context.currentTime + 0.4);\n};\n\nexport {\n  jitter,\n  sleep,\n  jitter50,\n  randomTrue,\n  deepCopy,\n  formatDollars,\n  shuffleArray,\n  generateWaitSet,\n  startKeypressListener,\n  getTurkUniqueId,\n  beep,\n};\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst COLLECTION_NAME = \"participant_responses\";\nconst config = {\n  apiKey: process.env.REACT_APP_apiKey,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: process.env.REACT_APP_projectId || \"no-firebase\",\n  storageBucket: process.env.REACT_APP_storageBucket,\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\n  appId: process.env.REACT_APP_appId,\n};\n// Initialize firebase app\nfirebase.initializeApp(config);\n// Get the firestore instance, and use the emulator if running locally\nlet db = firebase.firestore();\nif (window.location.hostname === \"localhost\") {\n  db.useEmulator(\"localhost\", 8080);\n}\n\n/**\n * Gets the download URLs for all objects in a Firebase storage folder. These can be\n * referenced in a src tag to display the objects, if they are images.\n * @param {string} participantID The participant ID.\n * @param {string} studyID The study ID.\n * @param {string} folderType The type of folder, either \"neutral\" or \"provoking\".\n * @returns An array of promises, each containing a download URL for an object.\n */\nconst getObjectURLs = async (participantID, studyID, folderType) => {\n  const folderURL = `${studyID}/${participantID}/${folderType}`;\n  const storage = firebase.storage();\n  const ref = storage.ref(folderURL);\n  const objects = await ref.listAll();\n  let URLs = objects.items.map(async (item) => await item.getDownloadURL());\n  return await Promise.all(URLs);\n};\n\n// Add participant data and trial data to db\nconst initParticipant = (participantId, studyId, startDate) => {\n  // return promise with value true if participant and study id match, false otherwise\n  return db\n    .collection(COLLECTION_NAME)\n    .doc(studyId)\n    .collection(\"participants\")\n    .doc(participantId)\n    .collection(\"data\")\n    .doc(startDate)\n    .set({\n      start_time: startDate,\n      app_version: window.navigator.appVersion,\n      app_platform: window.navigator.platform,\n      results: [],\n    })\n    .then(() => {\n      return true;\n    })\n    .catch(() => {\n      return false;\n    });\n};\n\n// add individual trials to db\nconst addToFirebase = (data) => {\n  const participantID = data.participant_id;\n  const studyID = data.study_id;\n  const startDate = data.start_date;\n  db.collection(COLLECTION_NAME)\n    .doc(studyID)\n    .collection(\"participants\")\n    .doc(participantID)\n    .collection(\"data\")\n    .doc(startDate)\n    .update(\"results\", firebase.firestore.FieldValue.arrayUnion(data))\n    .then(() => {\n      return true;\n    })\n    .catch((error) => {\n      console.error(\"Error adding to Firebase:\", error);\n      return false;\n    });\n};\n\n// Export types that exists in Firestore\n// This is not always necessary, but it's used in other examples\nconst { TimeStamp, GeoPoint } = firebase.firestore;\nexport {\n  db,\n  TimeStamp,\n  GeoPoint,\n  COLLECTION_NAME,\n  initParticipant,\n  addToFirebase,\n};\n\nexport { getObjectURLs };\nexport default firebase;\n","import { lang } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst experimentStart = () => {\n  let stimulus = baseStimulus(`<div><h1>${lang.task.name}</h1></div>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_button_response',\n    stimulus: stimulus,\n    prompt: '',\n    choices: [lang.prompt.continue.button],\n  }\n}\n\nexport default experimentStart\n","import { lang } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst holdUpMarker = () => {\n  let stimulus = baseStimulus(`<div>\n    <h2 id='usb-alert'></h2>\n    <br><p>${lang.prompt.focus}</p>\n    </div>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_button_response',\n    stimulus: stimulus,\n    choices: [lang.prompt.continue.button]\n  }\n}\n\nexport default holdUpMarker\n","import { eventCodes } from '../config/main'\nimport { jitter50 } from '../lib/utils'\nimport { pdSpotEncode, photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { fixationHTML } from '../lib/markup/fixation'\nimport { jsPsych } from 'jspsych-react'\nimport $ from 'jquery'\n\nconst fixation = (duration, jittered=true, green=false, hideCursor=false) => {\n  let stimulus = fixationHTML(green) + photodiodeGhostBox()\n\n  const code = eventCodes.fixation;\n\n  const trial_duration = jittered ? jitter50(duration) : duration\n\n  return {\n    type: 'html_keyboard_response',\n    choices: jsPsych.NO_KEYS,\n    stimulus: stimulus,\n    response_ends_trial: false,\n    trial_duration: trial_duration,\n    on_load: () => {\n      pdSpotEncode(code)\n      if (hideCursor) $('html').css('cursor', 'none')\n    },\n    on_finish: (data) => {\n      data.code = code\n      if (hideCursor) $('html').css('cursor', 'auto')\n    }\n  }\n}\n\nexport default fixation\n","export const fixationHTML = (color) => {\n  if (color) {\n    return '<div class=\"task-container\"><div id=\"fixation-dot\" class=\"color-green\"> </div></div>'\n  } else {\n    return '<div class=\"task-container\"><div id=\"fixation-dot\" class=\"color-white\"> </div></div>'\n  }\n}\n","import { eventCodes, imageSettings } from '../config/main'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\nimport $ from 'jquery'\nimport { jitter50 } from '../lib/utils'\n\n\nconst showImage = (image, duration) => {\n  const code = eventCodes.evidence\n\n  return {\n    type: 'image_keyboard_response',\n    stimulus: image,\n    prompt: photodiodeGhostBox(),\n    response_ends_trial: false,\n    trial_duration: jitter50(duration),\n    on_load: () => {\n      $('#jspsych-image-keyboard-response-stimulus').addClass('image')\n      $('#jspsych-image-keyboard-response-stimulus').height(imageSettings.height)\n      $('#jspsych-image-keyboard-response-stimulus').width(imageSettings.width)\n      $('html').css('cursor', 'none')\n      pdSpotEncode(code)\n    },\n    on_finish: (data) => {\n      data.code = code\n      $('html').css('cursor', 'auto')\n    }\n  }\n}\n\nexport default showImage\n","// utilities specific to this app/task\nimport _ from \"lodash\";\nimport { deepCopy, randomTrue, shuffleArray } from \"./utils\";\n\n// initialize starting conditions for each trial within a block\n// each repetition set is independently randomized then concatenated\n// no more than 3 images from a set can repeat in a row\nconst generateStartingOpts = (b) => {\n  let startingOptions = [];\n\n  for (let i = 0; i < b.repeats_per_condition; i++) {\n    let neutralImages = shuffleArray(deepCopy(b.images.neutral));\n    let provokingImages = shuffleArray(deepCopy(b.images.provoking));\n\n    while (neutralImages.length > 0 && provokingImages.length > 0) {\n      if (neutralImages.length - provokingImages.length >= 3) {\n        startingOptions.push(neutralImages.pop());\n      } else if (provokingImages.length - neutralImages.length >= 3) {\n        startingOptions.push(provokingImages.pop());\n      } else if (randomTrue()) {\n        startingOptions.push(neutralImages.pop());\n      } else {\n        startingOptions.push(provokingImages.pop());\n      }\n    }\n\n    startingOptions.push(...neutralImages);\n    startingOptions.push(...provokingImages);\n  }\n\n  return startingOptions;\n};\n\nconst getCircles = (start, stop, size) => {\n  const center = size / 2;\n  const r = center * 0.85;\n  const n = stop - start + 1;\n\n  const slice = Math.PI / (n - 1);\n\n  return _.range(start, stop + 1).map((val) => {\n    let theta = slice * val - Math.PI / 2;\n    let x = r * Math.sin(theta) + center;\n    let y = r * Math.cos(theta) + center;\n    return { n: val, x: x, y: y };\n  });\n};\n\nconst isColliding = (x1, y1, r1, x2, y2) => {\n  let dx = x1 - x2;\n  let dy = y1 - y2;\n  let distance = Math.sqrt(dx * dx + dy * dy);\n\n  return distance < r1;\n};\n\nconst getCircle = (x, y, r, circles, circle_r) => {\n  for (let i = 0; i < circles.length; i++) {\n    let c = circles[i];\n    if (isColliding(c.x, c.y, circle_r, x, y, r)) {\n      return c;\n    }\n  }\n\n  return null;\n};\n\nconst drawNumbers = (ctx, circles, radius, x, y, cursor_radius) => {\n  ctx.font = radius * 0.8 + \"px arial\";\n  ctx.textBaseline = \"middle\";\n  ctx.textAlign = \"center\";\n\n  let hovered = getCircle(x, y, cursor_radius, circles, radius);\n\n  circles.forEach((circle) => {\n    // draw circle\n    if (circle === hovered) {\n      ctx.fillStyle = \"#778899\"; // medium grey\n    } else {\n      ctx.fillStyle = \"#D3D3D3\"; // light grey\n    }\n    ctx.beginPath();\n    ctx.arc(circle.x, circle.y, radius, 0, 2 * Math.PI, true);\n    ctx.fill();\n\n    // draw text\n    ctx.fillStyle = \"#000000\"; // black\n    ctx.fillText(circle.n.toString(), circle.x, circle.y + 3.5);\n  });\n};\n\nconst drawPrompt = (ctx, rt, size) => {\n  // only draw if it's been 10 seconds\n  if (rt < 10000) return;\n\n  ctx.font = 20 + \"px arial\";\n  ctx.textBaseline = \"middle\";\n  ctx.textAlign = \"center\";\n\n  // draw text\n  ctx.fillStyle = \"#ffffff\"; // white\n  ctx.fillText(\"Please select a rating\", size / 2, size * 0.25);\n};\n\nconst drawFixation = (ctx, size) => {\n  ctx.fillStyle = \"#ffffff\";\n  ctx.beginPath();\n  ctx.arc(size / 2, size / 2, 7.5, 0, 2 * Math.PI, true);\n  ctx.fill();\n};\n\nconst drawCursor = (ctx, x, y, cursorSize) => {\n  ctx.beginPath();\n  ctx.moveTo(x, y - cursorSize);\n  ctx.lineTo(x, y + cursorSize);\n\n  ctx.moveTo(x - cursorSize, y);\n  ctx.lineTo(x + cursorSize, y);\n\n  // Line color\n  ctx.lineWidth = 3;\n  ctx.strokeStyle = \"#a6a6a6\";\n\n  ctx.stroke();\n};\n\nexport {\n  generateStartingOpts,\n  getCircles,\n  getCircle,\n  drawNumbers,\n  drawPrompt,\n  drawFixation,\n  drawCursor,\n};\n","import { eventCodes, ratingSettings } from '../config/main'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\nimport { getCircles, getCircle, drawNumbers, drawPrompt, drawFixation, drawCursor } from '../lib/taskUtils'\nimport $ from 'jquery'\n\n// make sure cursor radius is such that it can only touch one circle at a time\nconst CANVAS_SIZE = ratingSettings.canvasSize\nconst CIRCLE_RADIUS = ratingSettings.circleRadius\nconst CURSOR_RADIUS = ratingSettings.cursorRadius\n\nconst canvasHTML = `<canvas width=\"${CANVAS_SIZE}\" height=\"${CANVAS_SIZE}\" id=\"jspsych-canvas\">\n    Your browser does not support HTML5 canvas\n  </canvas>`\n\nconst rateImage = () => {\n    let stimulus = `<div class=\"task-container\">` + canvasHTML + photodiodeGhostBox() + `</div>`\n\n    return {\n      type: 'call_function',\n      async: true,\n      func: (done) => {\n        // send trigger events\n        const showCode = eventCodes.show_ratings\n        const rateCode = eventCodes.rate\n\n        const start = Date.now()\n\n        // add stimulus to the DOM\n        document.getElementById('jspsych-content').innerHTML = stimulus\n        // $('#jspsych-content').addClass('task-container')\n\n        // set up canvas\n        let canvas = document.querySelector('#jspsych-canvas');\n        let ctx = canvas.getContext('2d');\n        let animation\n\n        // hide the mouse\n        $('html').css('cursor', 'none')\n\n        let w = $('#jspsych-canvas').width()\n        let x = w / 2\n        let dx = 0 // start at rest\n\n        let h = $('#jspsych-canvas').height()\n        let y = h / 2\n        let dy = 0 // start at rest\n\n        let path = []\n        const rt = () => Date.now() - start\n        const addToPath = () => path.push({x: x, y: y, elapsed: rt()})\n        addToPath()\n\n        let circles = getCircles(ratingSettings.min, ratingSettings.max, CANVAS_SIZE)\n\n        const canvasDraw = () => {\n          // transparent background\n          ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n          drawPrompt(ctx, rt(), CANVAS_SIZE)\n\n          drawNumbers(ctx, circles, CIRCLE_RADIUS, x, y, CURSOR_RADIUS)\n\n          drawFixation(ctx, CANVAS_SIZE)\n\n          // draw the cursor\n          drawCursor(ctx, x, y, CURSOR_RADIUS)\n        }\n        // show ratings\n        canvasDraw();\n        pdSpotEncode(showCode)\n\n        // make sure canvas re-draws at 10 seconds to get prompt\n        setTimeout(canvasDraw, 10000)\n\n        // request control of the cursor from the dom\n        canvas.requestPointerLock()\n\n        const handleMoveListener = (e) => {\n          x += e.originalEvent.movementX;\n          y += e.originalEvent.movementY;\n\n          // if direction changes, add to path\n          let newdx = Math.sign(e.originalEvent.movementX)\n          let newdy = Math.sign(e.originalEvent.movementY)\n\n          let updated = false\n          if ( newdx !== dx && newdx !== 0 ) {\n            addToPath()\n            dx = newdx\n            updated = true\n          }\n\n          if ( newdy !== dy && newdy !== 0 ) {\n            if (!updated) addToPath()\n            dy = newdy\n          }\n\n          // keep circle in canvas\n          if (x > canvas.width - CURSOR_RADIUS) {\n            x = canvas.width - CURSOR_RADIUS;\n          }\n          if (y > canvas.height - CURSOR_RADIUS) {\n            y = canvas.height - CURSOR_RADIUS;\n          }\n          if (x < CURSOR_RADIUS) {\n            x = CURSOR_RADIUS;\n          }\n          if (y < CURSOR_RADIUS) {\n            y = CURSOR_RADIUS;\n          }\n\n          // re-draw with updates\n          if (!animation) {\n            animation = requestAnimationFrame( () => {\n              animation = null;\n              canvasDraw();\n            });\n          }\n        }\n\n        const handleClickListener = () => {\n            // find circle that was clicked (or null if none)\n            let circle = getCircle(x, y, CURSOR_RADIUS, circles, CIRCLE_RADIUS)\n\n            if (circle) { // rating complete\n              const end_rt = rt()\n              pdSpotEncode(rateCode)\n\n              // add final click spot to path\n              addToPath()\n\n              // free event listeners\n              $(document).unbind('mousemove', handleMoveListener)\n              $(document).unbind('click', handleClickListener)\n\n              setTimeout(\n                  () => {\n                    // re-show the mouse\n                    $('html').css('cursor', 'auto')\n\n                    done({circle: circle, click: {x: x, y: y}, code: [showCode, rateCode], rt: end_rt, path: path})\n                  },\n                  500)\n            }\n        }\n\n        // Bind event listener to document\n        $(document).bind('mousemove', handleMoveListener)\n        $(document).bind('click', handleClickListener)\n      }\n    }\n}\n\nexport default rateImage\n","// import trials\nimport fixation from '../trials/fixation'\nimport showImage from '../trials/showImage'\nimport rateImage from '../trials/rateImage'\n\nconst taskTrial = (condition) => {\n\n  // timeline\n  let timeline = [\n    // show condition\n    fixation(2000, true, false, true), // jittered, white, hidden cursor\n    fixation(200, false, true, true), // not jittered, green, hidden cursor\n    showImage(condition, 3000),\n\n    // end the trial\n    rateImage()\n  ]\n\n    return {\n  \t\ttype: 'html_keyboard_response',\n  \t\ttimeline: timeline\n  \t}\n}\n\nexport default taskTrial\n","import taskTrial from './taskTrial'\nimport { generateStartingOpts } from '../lib/taskUtils'\n\n\nconst taskBlock = (blockSettings) => {\n\n\tconst startingOpts = generateStartingOpts(blockSettings)\n\tlet timeline = startingOpts.map( (image) => taskTrial(image))\n\n\treturn {\n\t\ttype: 'html_keyboard_response',\n\t\ttimeline: timeline\n\t}\n}\n\nexport default taskBlock\n","import { lang, envConfig } from '../config/main'\nimport { photodiodeGhostBox } from '../lib/markup/photodiode'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst experimentEnd = (duration) => {\n  let stimulus = baseStimulus(`<h1>${lang.task.end}</h1>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_keyboard_response',\n    stimulus: stimulus,\n    trial_duration: duration,\n    on_load: () => {\n      if (envConfig.USE_VIDEO) {\n        console.log('finished')\n        window.cameraCapture.stop()\n        window.screenCapture.stop()\n      }\n    }\n  }\n}\n\nexport default experimentEnd\n","import { lang, breathingAudio, eventCodes } from '../config/main'\nimport { baseStimulus } from '../lib/markup/stimuli'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\n\nconst blockEnd = (curBlock, totalBlocks) => {\n  const code = eventCodes.start_break;\n\n  let prompt = baseStimulus(`\n    <div class='instructions'>\n  <h1>${lang.block.end_p1}\n    ${curBlock}\n    ${lang.block.end_p2}\n    ${totalBlocks}\n    ${lang.block.end_p3}</h1>\n  <h2>${lang.block.break_p1}\n    ${curBlock + 1}\n    ${lang.block.break_p2}\n    ${totalBlocks}\n    ${lang.block.break_p3}</h2>\n  </div>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'audio_keyboard_response',\n    stimulus: breathingAudio,\n    prompt: prompt,\n    choices: [],\n    response_ends_trial: false,\n    trial_ends_after_audio: true,\n    on_load: () => {\n      pdSpotEncode(code)\n    },\n    on_finish: (data) => {\n      data.code = code\n    }\n  }\n}\n\nexport default blockEnd\n","import * as _ from 'lodash'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\n// build a countdown transition with the given text and number of seconds\nconst buildCountdown = (text, time) => {\n  const times = _.range(time, 0 , -1)\n  const timeline = times.map( (val) => {return({ prompt: `<h1>${val}</h1>` })})\n\n  return ({\n    type: 'html_keyboard_response',\n    stimulus: baseStimulus(`<h3>${text}</h3>`, true),\n    trial_duration: 1000,\n    response_ends_trial: false,\n    timeline:  timeline\n  })\n}\n\nexport default buildCountdown\n","import { eventCodes, lang, audioCodes } from '../config/main'\nimport { photodiodeGhostBox, pdSpotEncode } from '../lib/markup/photodiode'\nimport { beep } from '../lib/utils'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\nconst startCode = () => {\n  let stimulus = baseStimulus(`<h1>${lang.prompt.setting_up}</h1>`, true) + photodiodeGhostBox()\n\n   return {\n    type: 'html_keyboard_response',\n    stimulus: stimulus,\n    trial_duration: 2000,\n    on_load: () => {\n      pdSpotEncode(eventCodes.open_provoc_task)\n      beep(audioCodes)\n    }\n  }\n}\n\nexport default startCode\n","import path from \"path\";\nimport { jsPsych } from \"jspsych-react\";\nimport { getObjectURLs } from \"../firebase\";\nimport {\n  lang,\n  envConfig,\n  numRequiredImages\n} from \"../config/main\";\nimport experimentEnd from \"../trials/experimentEnd\";\nimport blockEnd from \"../trials/blockEnd\";\nimport buildCountdown from \"../trials/countdown\";\nimport startCode from \"../trials/startCode\";\nimport taskBlock from \"./taskBlock\";\n\nlet app = false;\nlet fs = false;\nlet ipcRenderer = false;\n\n/**\n * Sets the experiment images from the Firebase storage bucket.\n * The function updates this object's \"images\" field to contain the images from Firebase.\n */\n const getFirebaseImages = async () => {\n  const participantID = jsPsych.data.get().select(\"participant_id\").values[0];\n  const studyID = jsPsych.data.get().select(\"study_id\").values[0];\n  const newImages = {\n    neutral: [],\n    provoking: []\n  }\n  newImages.neutral = await getObjectURLs(participantID, studyID, \"neutral\");\n  newImages.provoking = await getObjectURLs(participantID, studyID, \"provoking\")\n  return newImages;\n};\n\nconst checkNumImages = (newImages) => {\n  // check the number of loaded imaegs matches what is expected\n  let numNeutral = newImages.neutral.length;\n  let numProvoking = newImages.provoking.length;\n  if (numNeutral !== numRequiredImages || numProvoking !== numRequiredImages) {\n    if (envConfig.USE_ELECTRON) {\n      ipcRenderer.send(\n        \"error\",\n        `Number of images provided does not meet requirement.  Found ${numNeutral} neutral images and ${numProvoking} provoking images, the settings for this task requires ${numRequiredImages} of each type.`\n      );\n    } else {\n      alert(\n        `Number of images provided does not meet requirement.  Found ${numNeutral} neutral images and ${numProvoking} provoking images, the settings for this task requires ${numRequiredImages} of each type. Please reload and try again.`\n      );\n    }\n  }\n};\n\nconst setImages = async () => {\n  if (envConfig.USE_ELECTRON) {\n    app = window.require(\"electron\").remote.app;\n    fs = window.require(\"fs\");\n    const electron = window.require(\"electron\");\n    ipcRenderer = electron.ipcRenderer;\n    try {\n      const participantID = jsPsych.data.get().select(\"participant_id\")\n        .values[0];\n      const localImagePath = path.join(\n        app.getPath(\"desktop\"),\n        \"provocation-images\",\n        `${participantID}`\n      );\n      const neutralImagePath = path.join(localImagePath, \"neutral\");\n      const provokingImagePath = path.join(localImagePath, \"provoking\");\n\n      let neutralItems = fs.readdirSync(neutralImagePath);\n      let provokingItems = fs.readdirSync(provokingImagePath);\n      const newImages = {\n        neutral: [],\n        provoking: [],\n      };\n      newImages.neutral = neutralItems.map(\n        (image) => `file://` + path.join(neutralImagePath, image)\n      );\n      newImages.provoking = provokingItems.map(\n        (image) => `file://` + path.join(provokingImagePath, image)\n      );\n\n      checkNumImages(newImages);\n      return newImages;\n    } catch (error) {\n      console.log(\"Error loading local files - using default images\");\n      ipcRenderer.send(\n        \"error\",\n        `Could not load images from local device. - ${error}`\n      );\n    }\n  } else if (envConfig.USE_FIREBASE) {\n    const newImages = await getFirebaseImages();\n    checkNumImages(newImages);\n    return newImages;\n  }\n};\n\nconst taskSetUp = (blockSettings) => {\n  let addTasks = {\n    type: \"html_keyboard_response\",\n    trial_duration: 1,\n    stimulus: \"\",\n    prompt: \"\",\n    on_start: async () => {\n      const newImages = await setImages(blockSettings);\n\n      blockSettings.images.neutral = newImages.neutral;\n      blockSettings.images.provoking = newImages.provoking;\n\n      let i = 1;\n      while (i <= blockSettings.num_repeats) {\n        jsPsych.addNodeToEndOfTimeline(\n          buildCountdown(lang.countdown.message, 3),\n          () => {}\n        );\n        jsPsych.addNodeToEndOfTimeline(taskBlock(blockSettings), () => {});\n\n        // if last block, add experiment end, otherwise add a break\n        if (i < blockSettings.num_repeats) {\n          jsPsych.addNodeToEndOfTimeline(\n            blockEnd(i, blockSettings.num_repeats),\n            () => {}\n          );\n        } else {\n          jsPsych.addNodeToEndOfTimeline(experimentEnd(5000), () => {});\n        }\n\n        i += 1;\n      }\n    },\n  };\n\n  return {\n    type: \"html_keyboard_response\",\n    timeline: envConfig.USE_EEG ? [addTasks, startCode()] : [addTasks],\n  };\n};\n\nexport default taskSetUp;\n","import { lang } from '../config/main'\nimport { baseStimulus } from '../lib/markup/stimuli'\n\n\nconst screenOne = baseStimulus(`\n    <div class='instructions'>\n    <h1>${lang.instructions.welcome}</h1>\n    <p>${lang.instructions.p1}</p>\n    <p>${lang.instructions.p2}</p>\n    </div>\n    `, true)\n\nconst screenTwo = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.fixation}</p>\n    <div id=\"fixation-dot\" class=\"color-white\"></div>\n    </div>\n    `, true)\n\nconst screenThree = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.rate}</p>\n    </div>\n    `, true)\n\nconst screenFour = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.rate_practice}</p>\n    </div>\n    `, true)\n\nconst screenFive = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.no_talking}</p>\n    </div>\n    `, true)\n\nconst screenSix = baseStimulus(`\n    <div class='instructions'>\n    <p>${lang.instructions.instruction_end}</p>\n    </div>\n    `, true)\n\nconst breathing = baseStimulus(`\n  <div class='instructions'>\n  <p>${lang.instructions.breathing}</p>\n  </div>\n  `, true)\n\nconst instructions1 = {\n  type: 'instructions',\n  show_clickable_nav: true,\n  pages: [\n    screenOne,\n    breathing,\n    screenTwo,\n    screenThree,\n    screenFour,\n  ]\n}\n\nconst instructions2 = {\n  type: 'instructions',\n  show_clickable_nav: true,\n  pages: [\n    screenFive,\n    screenSix,\n  ]\n}\n\nexport {\n  instructions1,\n  instructions2\n}\n","import { lang } from '../config/main'\nimport { baseStimulus } from '../lib/markup/stimuli';\n\nconst adjustVolume = () => {\n    const stimulus = baseStimulus(`\n    <div class='instructions'>\n    <h1>${lang.instructions.adjust_volume}</h1>\n    </div>\n    `, true)\n    \n    return {\n        type: 'html_button_response',\n        stimulus: stimulus,\n        choices: [ lang.prompt.continue.button ],\n        response_ends_trial: true\n    }\n}\n\nexport default adjustVolume","import experimentStart from \"../trials/experimentStart\";\nimport holdUpMarker from \"../trials/holdUpMarker\";\nimport taskBlock from \"./taskBlock\";\nimport taskSetUp from \"./taskSetUp\";\nimport { instructions1, instructions2 } from \"../trials/instructions\";\nimport adjustVolume from \"../trials/adjustVolume\";\nimport camera from \"../trials/camera\";\n\nimport {\n  envConfig,\n  defaultBlockSettings,\n  practiceBlockSettings,\n} from \"../config/main\";\n\nlet timeline = [experimentStart()];\n\nif (envConfig.USE_VOLUME) timeline.push(adjustVolume());\n\nif (envConfig.USE_VIDEO) timeline.push(camera());\n\nif (envConfig.USE_EEG) timeline.push(holdUpMarker());\n\ntimeline.push(\n  taskSetUp(defaultBlockSettings),\n  instructions1,\n  taskBlock(practiceBlockSettings),\n  instructions2\n);\n\nconst primaryTimeline = timeline;\n\nconst mturkTimeline = [];\n\nexport const tl = envConfig.USE_MTURK ? mturkTimeline : primaryTimeline;\n","import React from \"react\";\nimport { Experiment } from \"jspsych-react\";\nimport { tl } from \"../timelines/main\";\nimport { breathingAudio } from \"../config/main\"\n\nfunction JsPsychExperiment({ dataUpdateFunction, dataFinishFunction }) {\n  return (\n    <div className=\"App\">\n      <Experiment\n        settings={{\n          timeline: tl,\n          preload_audio: [breathingAudio],\n          on_data_update: (data) => dataUpdateFunction(data),\n          on_finish: (data) => dataFinishFunction(data),\n        }}\n      />\n    </div>\n  );\n}\n\nexport default JsPsychExperiment;","import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Login({ onLogin, envParticipantId, envStudyId, validationFunction }) {\n  // State variables for login screen\n  const [participantId, setParticipant] = useState(\"\");\n  const [studyId, setStudy] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    // Update based on environment variables\n    setParticipant(envParticipantId);\n    setStudy(envStudyId);\n  }, [envParticipantId, envStudyId]);\n\n  // Checks if forms are filled in\n  const validateForm = () => {\n    return participantId.length > 0 && studyId.length > 0;\n  };\n\n  // Function to log in participant\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // Validates fields\n    validationFunction(participantId, studyId)\n      // Logs in depending on result from promise\n      .then((loggedIn) => {\n        if (loggedIn) {\n          onLogin(loggedIn, studyId, participantId);\n        } else {\n          setError(true);\n        }\n      });\n  };\n\n  return (\n    <div className=\"centered-h-v\">\n      <div className=\"width-50 max-width-600px\">\n        {error ? (\n          <div className=\"alert alert-danger\" role=\"alert\">\n            The participant ID and study ID do not match\n          </div>\n        ) : null}\n        <Form className=\"centered-h-v\" onSubmit={handleSubmit}>\n          <Form.Group className=\"width-100\" size=\"lg\" controlId=\"participantId\">\n            <Form.Label>Participant ID</Form.Label>\n            <Form.Control\n              autoFocus\n              type=\"participantId\"\n              value={participantId}\n              onChange={(e) => setParticipant(e.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"width-100\" size=\"lg\" controlId=\"studyId\">\n            <Form.Label>Study ID</Form.Label>\n            <Form.Control\n              type=\"studyId\"\n              value={studyId}\n              onChange={(e) => setStudy(e.target.value)}\n            />\n          </Form.Group>\n          <Button\n            style={{ width: \"100%\" }}\n            block\n            size=\"lg\"\n            type=\"submit\"\n            disabled={!validateForm()}\n          >\n            Log In\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { jsPsych } from \"jspsych-react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport { getTurkUniqueId, sleep } from \"./lib/utils\";\nimport { initParticipant, addToFirebase } from \"./firebase\"\nimport { envConfig } from \"./config/main\"\nimport JsPsychExperiment from \"./components/JsPsychExperiment\"\nimport Login from \"./components/Login\"\nimport { version } from \"../package.json\";\n\nfunction App() {\n  const [loggedIn, setLogin] = useState(false);\n  const [ipcRenderer, setRenderer] = useState(false);\n  const [psiturk, setPsiturk] = useState(false);\n  const [envParticipantId, setEnvParticipantId] = useState(\"\");\n  const [envStudyId, setEnvStudyId] = useState(\"\");\n  const [currentMethod, setMethod] = useState(\"default\");\n  const [reject, setReject] = useState(false);\n\n  const startDate = new Date().toISOString();\n\n  const query = new URLSearchParams(window.location.search);\n\n  // Validation functions for desktop case and firebase\n  const defaultValidation = async () => {\n    return true;\n  };\n  const firebaseValidation = (participantId, studyId) => {\n    return initParticipant(participantId, studyId, startDate);\n  };\n\n  // Adding data functions for firebase, electron adn Mturk\n  const defaultFunction = () => {};\n  const firebaseUpdateFunction = (data) => {\n    addToFirebase(data);\n  };\n  const desktopUpdateFunction = (data) => {\n    ipcRenderer.send(\"data\", data);\n  };\n  const psiturkUpdateFunction = (data) => {\n    psiturk.recordTrialData(data);\n  };\n\n  // On finish functions for electron, Mturk\n  const desktopFinishFunction = () => {\n    ipcRenderer.send(\"end\", \"true\");\n  };\n  const psiturkFinishFunction = () => {\n    const completePsiturk = async () => {\n      psiturk.saveData();\n      await sleep(5000);\n      psiturk.completeHIT();\n    };\n    completePsiturk();\n  };\n\n  // Function to add jspsych data on login\n  const setLoggedIn = useCallback(\n    (newLoggedIn, studyId, participantId) => {\n      if (newLoggedIn) {\n        jsPsych.data.addProperties({\n          participant_id: participantId,\n          study_id: studyId,\n          start_date: startDate,\n          task_version: version\n        });\n      }\n      setLogin(newLoggedIn);\n    },\n    [startDate]\n  );\n\n  // Login logic\n  useEffect(() => {\n    // For testing and debugging purposes\n    console.log(\"Environment configuration:\", envConfig);\n\n    // If on desktop\n    if (envConfig.USE_ELECTRON) {\n      const electron = window.require(\"electron\");\n      const renderer = electron.ipcRenderer;\n      setRenderer(renderer);\n      renderer.send(\"updateEnvironmentVariables\", envConfig);\n      // If at home, fill in fields based on environment variables\n      const credentials = renderer.sendSync(\"syncCredentials\");\n      if (credentials.envParticipantId) {\n        setEnvParticipantId(credentials.envParticipantId);\n      }\n      if (credentials.envStudyId) {\n        setEnvStudyId(credentials.envStudyId);\n      }\n      setMethod(\"desktop\");\n      // If online\n    } else {\n      if (envConfig.USE_MTURK) {\n        /* eslint-disable */\n        window.lodash = _.noConflict();\n        const turkId = getTurkUniqueId();\n        setPsiturk(new PsiTurk(turkId, \"/complete\"));\n        setMethod(\"mturk\");\n        setLoggedIn(true, \"mturk\", turkId);\n        /* eslint-enable */\n      }\n      // If firebase\n      else if (envConfig.USE_FIREBASE) {\n        setMethod(\"firebase\");\n        // Autologin with query parameters\n        const participantId = query.get(\"participantID\");\n        const studyId = query.get(\"studyID\");\n        if (participantId) {\n          setEnvParticipantId(participantId)\n        }\n        if (studyId) {\n          setEnvStudyId(studyId)\n        }\n      } else {\n        setReject(true);\n      }\n    }\n  }, [setLoggedIn, query]);\n\n  if (reject) {\n    return (\n      <div className=\"centered-h-v\">\n        <div className=\"width-50 alert alert-danger\">\n          Please tell your task provider to enable Firebase.\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <>\n        {loggedIn ? (\n          <JsPsychExperiment\n            dataUpdateFunction={\n              {\n                desktop: desktopUpdateFunction,\n                firebase: firebaseUpdateFunction,\n                mturk: psiturkUpdateFunction,\n                default: defaultFunction,\n              }[currentMethod]\n            }\n            dataFinishFunction={\n              {\n                desktop: desktopFinishFunction,\n                mturk: psiturkFinishFunction,\n                firebase: defaultFunction,\n                default: defaultFunction,\n              }[currentMethod]\n            }\n          />\n        ) : (\n          <Login\n            validationFunction={\n              {\n                desktop: defaultValidation,\n                default: defaultValidation,\n                firebase: firebaseValidation,\n              }[currentMethod]\n            }\n            envParticipantId={envParticipantId}\n            envStudyId={envStudyId}\n            onLogin={setLoggedIn}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}